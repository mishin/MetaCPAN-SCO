{
   "timed_out" : false,
   "_shards" : {
      "failed" : 0,
      "successful" : 5,
      "total" : 5
   },
   "hits" : {
      "total" : 177,
      "hits" : [
         {
            "_id" : "Dm94w2wuLqmolXt4_85mf_dZYG4",
            "_source" : {
               "binary" : false,
               "level" : 5,
               "mime" : "text/plain",
               "authorized" : true,
               "stat" : {
                  "mtime" : 1408116417,
                  "size" : 192,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/one_fail.plx",
               "sloc" : 0,
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "Dm94w2wuLqmolXt4_85mf_dZYG4",
               "author" : "EXODIST",
               "name" : "one_fail.plx",
               "release" : "Test-Simple-1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : ""
            },
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "60EM_wcoDfMfvjdt4TYSSSwOBLo",
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "name" : "lib",
               "author" : "EXODIST",
               "id" : "60EM_wcoDfMfvjdt4TYSSSwOBLo",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "sloc" : 0,
               "path" : "lib",
               "directory" : true,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 16877,
                  "size" : 4096,
                  "uid" : 1009,
                  "mtime" : 1413943292
               },
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 0,
               "binary" : true
            },
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "z7q7lhChR8Ql_ky6ZUotTg3Uz0g",
            "_source" : {
               "binary" : true,
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 3,
               "stat" : {
                  "mode" : 16877,
                  "gid" : 1009,
                  "mtime" : 1413943292,
                  "uid" : 1009,
                  "size" : 4096
               },
               "maturity" : "released",
               "sloc" : 0,
               "path" : "lib/Test/Builder/Tester",
               "directory" : true,
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "id" : "z7q7lhChR8Ql_ky6ZUotTg3Uz0g",
               "name" : "Tester",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : ""
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.24021
         },
         {
            "_id" : "cjESw6nvObfbuQWdh_GNES_BLS0",
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 13619,
                  "uid" : 1009,
                  "mtime" : 1413416218
               },
               "sloc" : 189,
               "path" : "lib/Test/Builder/IO/Scalar.pm",
               "directory" : false,
               "description" : "This is a copy of IO::Scalar which ships with Test::Builder to support scalar references as filehandles on Perl 5.6. Newer versions of Perl simply use \"open()\"'s built in support. Test::Builder can not have dependencies on other modules without careful consideration, so its simply been copied into the distribution.",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl-module",
               "level" : 4,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "documentation" : "Test::Builder::IO::Scalar",
               "distribution" : "Test-Simple",
               "pod_lines" : [
                  [
                     3,
                     25
                  ],
                  [
                     47,
                     5
                  ],
                  [
                     55,
                     7
                  ],
                  [
                     77,
                     10
                  ],
                  [
                     103,
                     6
                  ],
                  [
                     116,
                     7
                  ],
                  [
                     130,
                     3
                  ],
                  [
                     138,
                     5
                  ],
                  [
                     147,
                     6
                  ],
                  [
                     158,
                     6
                  ],
                  [
                     175,
                     8
                  ],
                  [
                     266,
                     7
                  ],
                  [
                     284,
                     10
                  ],
                  [
                     317,
                     7
                  ],
                  [
                     339,
                     6
                  ],
                  [
                     359,
                     7
                  ],
                  [
                     374,
                     6
                  ],
                  [
                     386,
                     3
                  ],
                  [
                     393,
                     5
                  ],
                  [
                     402,
                     6
                  ],
                  [
                     413,
                     6
                  ],
                  [
                     424,
                     5
                  ],
                  [
                     434,
                     5
                  ],
                  [
                     447,
                     5
                  ],
                  [
                     471,
                     5
                  ],
                  [
                     484,
                     6
                  ],
                  [
                     495,
                     8
                  ],
                  [
                     511,
                     6
                  ],
                  [
                     522,
                     6
                  ],
                  [
                     534,
                     6
                  ],
                  [
                     573,
                     3
                  ],
                  [
                     578,
                     79
                  ]
               ],
               "module" : [
                  {
                     "authorized" : true,
                     "name" : "Test::Builder::IO::Scalar",
                     "version_numified" : 2.111,
                     "version" : "2.111",
                     "associated_pod" : "EXODIST/Test-Simple-1.001007/lib/Test/Builder/IO/Scalar.pm",
                     "indexed" : true
                  }
               ],
               "pod" : "NAME Test::Builder::IO::Scalar - A copy of IO::Scalar for Test::Builder DESCRIPTION This is a copy of IO::Scalar which ships with Test::Builder to support scalar references as filehandles on Perl 5.6. Newer versions of Perl simply use \"open()\"'s built in support. Test::Builder can not have dependencies on other modules without careful consideration, so its simply been copied into the distribution. COPYRIGHT and LICENSE This file came from the \"IO-stringy\" Perl5 toolkit. Copyright (c) 1996 by Eryq. All rights reserved. Copyright (c) 1999,2001 by ZeeGee Software Inc. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself. Construction new [ARGS...] *Class method.* Return a new, unattached scalar handle. If any arguments are given, they're sent to open(). open [SCALARREF] *Instance method.* Open the scalar handle on a new scalar, pointed to by SCALARREF. If no SCALARREF is given, a \"private\" scalar is created to hold the file data. Returns the self object on success, undefined on error. opened *Instance method.* Is the scalar handle opened on something? close *Instance method.* Disassociate the scalar handle from its underlying scalar. Done automatically on destroy. Input and output flush *Instance method.* No-op, provided for OO compatibility. getc *Instance method.* Return the next character, or undef if none remain. getline *Instance method.* Return the next line, or undef on end of string. Can safely be called in an array context. Currently, lines are delimited by \"\\n\". getlines *Instance method.* Get all remaining lines. It will croak() if accidentally called in a scalar context. print ARGS... *Instance method.* Print ARGS to the underlying scalar. Warning: this continues to always cause a seek to the end of the string, but if you perform seek()s and tell()s, it is still safer to explicitly seek-to-end before subsequent print()s. read BUF, NBYTES, [OFFSET] *Instance method.* Read some bytes from the scalar. Returns the number of bytes actually read, 0 on end-of-file, undef on error. write BUF, NBYTES, [OFFSET] *Instance method.* Write some bytes to the scalar. sysread BUF, LEN, [OFFSET] *Instance method.* Read some bytes from the scalar. Returns the number of bytes actually read, 0 on end-of-file, undef on error. syswrite BUF, NBYTES, [OFFSET] *Instance method.* Write some bytes to the scalar. Seeking/telling and other attributes autoflush *Instance method.* No-op, provided for OO compatibility. binmode *Instance method.* No-op, provided for OO compatibility. clearerr *Instance method.* Clear the error and EOF flags. A no-op. eof *Instance method.* Are we at end of file? seek OFFSET, WHENCE *Instance method.* Seek to a given position in the stream. sysseek OFFSET, WHENCE *Instance method.* Identical to \"seek OFFSET, WHENCE\", *q.v.* tell *Instance method.* Return the current position in the stream, as a numeric offset. use_RS [YESNO] *Instance method.* Deprecated and ignored. Obey the current setting of $/, like IO::Handle does? Default is false in 1.x, but cold-welded true in 2.x and later. setpos POS *Instance method.* Set the current position, using the opaque value returned by \"getpos()\". getpos *Instance method.* Return the current position in the string, as an opaque object. sref *Instance method.* Return a reference to the underlying scalar. WARNINGS Perl's TIEHANDLE spec was incomplete prior to 5.005_57; it was missing support for \"seek()\", \"tell()\", and \"eof()\". Attempting to use these functions with an IO::Scalar will not work prior to 5.005_57. IO::Scalar will not have the relevant methods invoked; and even worse, this kind of bug can lie dormant for a while. If you turn warnings on (via $^W or \"perl -w\"), and you see something like this... attempt to seek on unopened filehandle ...then you are probably trying to use one of these functions on an IO::Scalar with an old Perl. The remedy is to simply use the OO version; e.g.: $SH->seek(0,0); ### GOOD: will work on any 5.005 seek($SH,0,0); ### WARNING: will only work on 5.005_57 and beyond VERSION $Id: Scalar.pm,v 1.6 2005/02/10 21:21:53 dfs Exp $ AUTHORS Primary Maintainer David F. Skoll (dfs@roaringpenguin.com). Principal author Eryq (eryq@zeegee.com). President, ZeeGee Software Inc (http://www.zeegee.com). Other contributors The full set of contributors always includes the folks mentioned in \"CHANGE LOG\" in IO::Stringy. But just the same, special thanks to the following individuals for their invaluable contributions (if I've forgotten or misspelled your name, please email me!): *Andy Glew,* for contributing \"getc()\". *Brandon Browning,* for suggesting \"opened()\". *David Richter,* for finding and fixing the bug in \"PRINTF()\". *Eric L. Brine,* for his offset-using read() and write() implementations. *Richard Jones,* for his patches to massively improve the performance of \"getline()\" and add \"sysread\" and \"syswrite\". *B. K. Oxley (binkley),* for stringification and inheritance improvements, and sundry good ideas. *Doug Wilson,* for the IO::Handle inheritance and automatic tie-ing. SEE ALSO IO::String, which is quite similar but which was designed more-recently and with an IO::Handle-like interface in mind, so you could mix OO- and native-filehandle usage without using tied(). *Note:* as of version 2.x, these classes all work like their IO::Handle counterparts, so we have comparable functionality to IO::String. ",
               "slop" : 188,
               "abstract" : "A copy of IO::Scalar for Test::Builder",
               "id" : "cjESw6nvObfbuQWdh_GNES_BLS0",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "release" : "Test-Simple-1.001007",
               "name" : "Scalar.pm",
               "author" : "EXODIST"
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.24021
         },
         {
            "_source" : {
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false,
               "directory" : false,
               "path" : "t/buffer.t",
               "sloc" : 15,
               "stat" : {
                  "size" : 424,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "author" : "EXODIST",
               "name" : "buffer.t",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "QUKUakmMaKJH59DZonqFFU5OCjM",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007"
            },
            "_id" : "QUKUakmMaKJH59DZonqFFU5OCjM",
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_id" : "qUmp9iz_q5UM0miEX2OqY62me0E",
            "_source" : {
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "qUmp9iz_q5UM0miEX2OqY62me0E",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "died.t",
               "author" : "EXODIST",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 848,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 28,
               "directory" : false,
               "path" : "t/died.t",
               "binary" : false,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl"
            },
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_source" : {
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "1azclxoRxOYhmtr_65bDcaOmZMA",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "fail-like.t",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 1557,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "directory" : false,
               "path" : "t/fail-like.t",
               "sloc" : 42,
               "binary" : false,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true
            },
            "_id" : "1azclxoRxOYhmtr_65bDcaOmZMA",
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.24021,
            "_source" : {
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 793,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/pod-coverage.t",
               "sloc" : 20,
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "9lKWb_D0HCTWelayW8tAPjYU0Cw",
               "author" : "EXODIST",
               "name" : "pod-coverage.t",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : ""
            },
            "_id" : "9lKWb_D0HCTWelayW8tAPjYU0Cw"
         },
         {
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "hMRcwMuTY5_QP9bPHl3XKYWQ_SI",
               "author" : "EXODIST",
               "name" : "extra_one.t",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "stat" : {
                  "uid" : 1009,
                  "size" : 869,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/extra_one.t",
               "sloc" : 34
            },
            "_id" : "hMRcwMuTY5_QP9bPHl3XKYWQ_SI"
         },
         {
            "_source" : {
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false,
               "path" : "t/plan_no_plan.t",
               "directory" : false,
               "sloc" : 32,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 794,
                  "mtime" : 1413416121
               },
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "plan_no_plan.t",
               "id" : "DDioDNHhSjCkgnT_XY9CRvhOwnA",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "pod_lines" : [],
               "distribution" : "Test-Simple"
            },
            "_id" : "DDioDNHhSjCkgnT_XY9CRvhOwnA",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.24021
         },
         {
            "_id" : "E3VQ7iO8iaeAXI5ec_iyttRd1Io",
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "BEGIN_require_ok.t",
               "id" : "E3VQ7iO8iaeAXI5ec_iyttRd1Io",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "directory" : false,
               "path" : "t/BEGIN_require_ok.t",
               "sloc" : 17,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 463,
                  "uid" : 1009
               },
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.24021
         },
         {
            "_id" : "9mVOxeIisXc3ZRCgwyM14E6i93U",
            "_source" : {
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "name" : "wstat.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "9mVOxeIisXc3ZRCgwyM14E6i93U",
               "sloc" : 15,
               "directory" : false,
               "path" : "t/subtest/wstat.t",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 369,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "binary" : false
            },
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "3S1xBtXFv8PvWfD8bEGFFXLKirM",
            "_source" : {
               "directory" : false,
               "path" : "t/subtest/implicit_done.t",
               "sloc" : 20,
               "stat" : {
                  "uid" : 1009,
                  "size" : 479,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "author" : "EXODIST",
               "name" : "implicit_done.t",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "3S1xBtXFv8PvWfD8bEGFFXLKirM"
            }
         },
         {
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "XC7hJfv8EdnI_nkC_4jLxLn_jIU",
            "_source" : {
               "name" : "tbt_09do.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "XC7hJfv8EdnI_nkC_4jLxLn_jIU",
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false,
               "sloc" : 17,
               "path" : "t/Tester/tbt_09do.t",
               "directory" : false,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 472,
                  "mtime" : 1413416121
               },
               "maturity" : "released"
            }
         },
         {
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "jj05pnqsHY582x0hfSaUB8uk3XA",
            "_source" : {
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "jj05pnqsHY582x0hfSaUB8uk3XA",
               "name" : "ok_obj.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "stat" : {
                  "size" : 462,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "sloc" : 18,
               "path" : "t/Builder/ok_obj.t",
               "directory" : false,
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2
            }
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.24021,
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 907,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 35,
               "directory" : false,
               "path" : "t/Builder/fork_with_new_stdout.t",
               "binary" : false,
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [
                  [
                     42,
                     12
                  ]
               ],
               "distribution" : "Test-Simple",
               "pod" : "POD ERRORS Hey! The above document had some coding errors, which are explained below: Around line 43: =pod directives shouldn't be over one line long! Ignoring all 11 lines of content ",
               "slop" : 12,
               "id" : "N9S24WBLKp8Xb72pmjIkcR0dJzo",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "fork_with_new_stdout.t",
               "author" : "EXODIST"
            },
            "_id" : "N9S24WBLKp8Xb72pmjIkcR0dJzo"
         },
         {
            "_source" : {
               "path" : "t/Builder/has_plan2.t",
               "directory" : false,
               "sloc" : 16,
               "maturity" : "released",
               "stat" : {
                  "uid" : 1009,
                  "size" : 355,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "binary" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "has_plan2.t",
               "id" : "DbNlBl_HaTeQo2R__oafVaHYMfU",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54"
            },
            "_id" : "DbNlBl_HaTeQo2R__oafVaHYMfU",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.24021
         },
         {
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "cvOO_uLbXCeXsCBzQoIBN3bL7Yo",
            "_source" : {
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "binary" : false,
               "sloc" : 50,
               "path" : "t/Builder/reset.t",
               "directory" : false,
               "stat" : {
                  "uid" : 1009,
                  "size" : 2048,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "name" : "reset.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "cvOO_uLbXCeXsCBzQoIBN3bL7Yo",
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007
            }
         },
         {
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "name" : "no_header.t",
               "author" : "EXODIST",
               "id" : "xu34LIGGzSn_HmR05QZzKn_o3zo",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "pod" : "",
               "slop" : 0,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false,
               "sloc" : 14,
               "path" : "t/Builder/no_header.t",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 298,
                  "uid" : 1009,
                  "mtime" : 1413416121
               }
            },
            "_id" : "xu34LIGGzSn_HmR05QZzKn_o3zo"
         },
         {
            "_id" : "X3BTZssQ5csmcfXR5PwzJ_aBSkg",
            "_source" : {
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 152,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "sloc" : 7,
               "directory" : false,
               "path" : "t/Builder/done_testing_with_no_plan.t",
               "binary" : false,
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "X3BTZssQ5csmcfXR5PwzJ_aBSkg",
               "name" : "done_testing_with_no_plan.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007"
            },
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "name" : "done_testing_with_number.t",
               "author" : "EXODIST",
               "id" : "VBxH0uMjg9Hgaf1IMyKunRDgAi0",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false,
               "sloc" : 7,
               "directory" : false,
               "path" : "t/Builder/done_testing_with_number.t",
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 236,
                  "mtime" : 1413416121
               }
            },
            "_id" : "VBxH0uMjg9Hgaf1IMyKunRDgAi0",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.24021
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.24021,
            "_source" : {
               "id" : "OPvI0QdHydJN0vvL6_CS6HbNoRg",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "done_testing_with_plan.t",
               "author" : "EXODIST",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 153,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 7,
               "directory" : false,
               "path" : "t/Builder/done_testing_with_plan.t"
            },
            "_id" : "OPvI0QdHydJN0vvL6_CS6HbNoRg"
         },
         {
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "ps9hugLA9ct1_QPNWFb_ACHOUgM",
               "name" : "Simple",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "binary" : true,
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 1,
               "stat" : {
                  "mode" : 16877,
                  "gid" : 1009,
                  "mtime" : 1413943292,
                  "size" : 4096,
                  "uid" : 1009
               },
               "maturity" : "released",
               "sloc" : 0,
               "directory" : true,
               "path" : "t/Simple"
            },
            "_id" : "ps9hugLA9ct1_QPNWFb_ACHOUgM"
         },
         {
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "authorized" : true,
               "level" : 1,
               "mime" : "text/plain",
               "binary" : true,
               "sloc" : 0,
               "directory" : true,
               "path" : "t/lib",
               "stat" : {
                  "size" : 4096,
                  "uid" : 1009,
                  "mtime" : 1413943292,
                  "gid" : 1009,
                  "mode" : 16877
               },
               "maturity" : "released",
               "name" : "lib",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "zpQUANdeegvNtkGq1g_L_WhK6go",
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007
            },
            "_id" : "zpQUANdeegvNtkGq1g_L_WhK6go"
         },
         {
            "_id" : "K9AJW4juOZwBbihUHBp6S3Adlw8",
            "_source" : {
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "id" : "K9AJW4juOZwBbihUHBp6S3Adlw8",
               "name" : ".perlcriticrc",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 0,
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1406905176,
                  "size" : 1891,
                  "uid" : 1009
               },
               "maturity" : "released",
               "sloc" : 0,
               "directory" : false,
               "path" : ".perlcriticrc"
            },
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_source" : {
               "directory" : false,
               "path" : "MANIFEST.SKIP",
               "sloc" : 0,
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 1267
               },
               "maturity" : "released",
               "level" : 0,
               "mime" : "text/plain",
               "authorized" : true,
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "author" : "EXODIST",
               "name" : "MANIFEST.SKIP",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "id" : "Q4l_t9X_VxtGdmA4usoUqQRwCSc"
            },
            "_id" : "Q4l_t9X_VxtGdmA4usoUqQRwCSc",
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.24021
         },
         {
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "Changes",
               "id" : "1ZN6aqA_1HxNmiSoSf1PBjo3rmw",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "path" : "Changes",
               "directory" : false,
               "sloc" : 768,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 37399,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "level" : 0,
               "mime" : "",
               "authorized" : true,
               "binary" : false
            },
            "_id" : "1ZN6aqA_1HxNmiSoSf1PBjo3rmw"
         },
         {
            "_id" : "fKA0DHIfkJRgeWV6_JNH7iFrq6E",
            "_source" : {
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false,
               "path" : "t/cmp_ok.t",
               "directory" : false,
               "sloc" : 65,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 1794,
                  "mtime" : 1413416121
               },
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "cmp_ok.t",
               "id" : "fKA0DHIfkJRgeWV6_JNH7iFrq6E",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple"
            },
            "_score" : 12.24021,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.24021,
            "_id" : "L8uRoIMFPKUpS2IHrvl43wd2nsQ",
            "_source" : {
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "L8uRoIMFPKUpS2IHrvl43wd2nsQ",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "dependents.t",
               "author" : "EXODIST",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 943,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 29,
               "path" : "t/dependents.t",
               "directory" : false,
               "binary" : false,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl"
            }
         },
         {
            "_score" : 12.24021,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 10866
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/fail-more.t",
               "sloc" : 269,
               "binary" : false,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : "",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "leHqGSyBVvoukOqPAOqX_q_fgw4",
               "author" : "EXODIST",
               "name" : "fail-more.t",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "leHqGSyBVvoukOqPAOqX_q_fgw4"
         },
         {
            "_source" : {
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl-module",
               "binary" : false,
               "sloc" : 8,
               "path" : "t/lib/NoExporter.pm",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "size" : 150,
                  "uid" : 1009,
                  "mtime" : 1408303882,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "release" : "Test-Simple-1.001007",
               "name" : "NoExporter.pm",
               "author" : "EXODIST",
               "id" : "0IgpDqZ_ICKRxPhuzXQcpjHK_OM",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "pod" : "",
               "slop" : 0,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple"
            },
            "_id" : "0IgpDqZ_ICKRxPhuzXQcpjHK_OM",
            "_score" : 12.231414,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "binary" : false,
               "level" : 2,
               "mime" : "text/x-script.perl-module",
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1408303882,
                  "uid" : 1009,
                  "size" : 607,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "path" : "t/lib/MyOverload.pm",
               "directory" : false,
               "sloc" : 19,
               "id" : "csXBiLCSstIXwbgXQo2Mw6_rVnc",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "MyOverload.pm",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0
            },
            "_id" : "csXBiLCSstIXwbgXQo2Mw6_rVnc"
         },
         {
            "_score" : 12.231414,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "name" : "Test",
               "author" : "EXODIST",
               "id" : "AvbV4O0ICRES3K0qhsDp2G1jVw8",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "sloc" : 0,
               "directory" : true,
               "path" : "t/lib/Test",
               "maturity" : "released",
               "stat" : {
                  "mode" : 16877,
                  "gid" : 1009,
                  "mtime" : 1413943292,
                  "size" : 4096,
                  "uid" : 1009
               },
               "authorized" : true,
               "level" : 2,
               "mime" : "text/plain",
               "binary" : true
            },
            "_id" : "AvbV4O0ICRES3K0qhsDp2G1jVw8"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.231414,
            "_id" : "n7soS6fms_KjH_EzMw47q0QO3yI",
            "_source" : {
               "path" : "t/lib/Test/Simple/sample_tests/extras.plx",
               "directory" : false,
               "sloc" : 0,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1408116417,
                  "uid" : 1009,
                  "size" : 206
               },
               "level" : 5,
               "mime" : "text/plain",
               "authorized" : true,
               "binary" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "extras.plx",
               "id" : "n7soS6fms_KjH_EzMw47q0QO3yI",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false
            }
         },
         {
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "LfPzEIe5_J5zhlpR9_bG_4P4XB8",
            "_source" : {
               "binary" : false,
               "authorized" : true,
               "level" : 5,
               "mime" : "text/plain",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1408116417,
                  "uid" : 1009,
                  "size" : 344,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 0,
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/death_with_handler.plx",
               "id" : "LfPzEIe5_J5zhlpR9_bG_4P4XB8",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "death_with_handler.plx",
               "author" : "EXODIST",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0
            }
         },
         {
            "_id" : "_qVdyuCK_F3n8I9Ji8SEne2gJ70",
            "_source" : {
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "author" : "EXODIST",
               "name" : "missing_done_testing.plx",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "_qVdyuCK_F3n8I9Ji8SEne2gJ70",
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/missing_done_testing.plx",
               "sloc" : 0,
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1408116417,
                  "uid" : 1009,
                  "size" : 152
               },
               "maturity" : "released",
               "level" : 5,
               "mime" : "text/plain",
               "authorized" : true,
               "binary" : false
            },
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "path" : "t/lib/Test/Simple/sample_tests/death.plx",
               "directory" : false,
               "sloc" : 0,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 253,
                  "mtime" : 1408116417
               },
               "maturity" : "released",
               "level" : 5,
               "mime" : "text/plain",
               "authorized" : true,
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "author" : "EXODIST",
               "name" : "death.plx",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "WsRkIHoXOoSWpKOzPnTKapHtpvc"
            },
            "_id" : "WsRkIHoXOoSWpKOzPnTKapHtpvc"
         },
         {
            "_score" : 12.231414,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "de2hbIFUGtIE1RugzN1mmPUQJOg",
            "_source" : {
               "id" : "de2hbIFUGtIE1RugzN1mmPUQJOg",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "pre_plan_death.plx",
               "author" : "EXODIST",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 5,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1408116417,
                  "uid" : 1009,
                  "size" : 289
               },
               "sloc" : 0,
               "path" : "t/lib/Test/Simple/sample_tests/pre_plan_death.plx",
               "directory" : false
            }
         },
         {
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "KsK1GgCHWXjZjgdyCMVRWN15k6U",
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "require.plx",
               "id" : "KsK1GgCHWXjZjgdyCMVRWN15k6U",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "level" : 5,
               "mime" : "text/plain",
               "authorized" : true,
               "binary" : false,
               "path" : "t/lib/Test/Simple/sample_tests/require.plx",
               "directory" : false,
               "sloc" : 0,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1408116417,
                  "uid" : 1009,
                  "size" : 22
               }
            }
         },
         {
            "_source" : {
               "binary" : false,
               "level" : 3,
               "mime" : "text/x-script.perl-module",
               "authorized" : true,
               "stat" : {
                  "size" : 87,
                  "uid" : 1009,
                  "mtime" : 1408303882,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/lib/Dev/Null.pm",
               "sloc" : 5,
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "UKFjr5Z_6SebUlsx3GAlRYCojz8",
               "author" : "EXODIST",
               "name" : "Null.pm",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : ""
            },
            "_id" : "UKFjr5Z_6SebUlsx3GAlRYCojz8",
            "_score" : 12.231414,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "Yyf41yibxFf8xjbmsQo1pPYSXS4",
            "_source" : {
               "name" : "indent.pl",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "Yyf41yibxFf8xjbmsQo1pPYSXS4",
               "slop" : 8,
               "pod" : "NOTES Must have explicit finalize Must name nest Trailing summary test Pass chunk o'TAP No builder may have more than one child active What happens if you call ->finalize with open children ",
               "distribution" : "Test-Simple",
               "pod_lines" : [
                  [
                     8,
                     10
                  ]
               ],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "binary" : false,
               "sloc" : 21,
               "path" : "examples/indent.pl",
               "directory" : false,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 681,
                  "mtime" : 1406905176
               },
               "maturity" : "released"
            },
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.231414,
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "Tutorial.pod",
               "abstract" : "A tutorial about writing really basic tests",
               "id" : "8WYajjcR_jYVaPYtQI0_veUMPNc",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "pod" : "NAME Test::Tutorial - A tutorial about writing really basic tests DESCRIPTION *AHHHHHHH!!!! NOT TESTING! Anything but testing! Beat me, whip me, send me to Detroit, but don't make me write tests!* **sob** *Besides, I don't know how to write the damned things.* Is this you? Is writing tests right up there with writing documentation and having your fingernails pulled out? Did you open up a test and read ######## We start with some black magic and decide that's quite enough for you? It's ok. That's all gone now. We've done all the black magic for you. And here are the tricks... Nuts and bolts of testing. Here's the most basic test program. #!/usr/bin/perl -w print \"1..1\\n\"; print 1 + 1 == 2 ? \"ok 1\\n\" : \"not ok 1\\n\"; Because 1 + 1 is 2, it prints: 1..1 ok 1 What this says is: 1..1 \"I'm going to run one test.\" [1] \"ok 1\" \"The first test passed\". And that's about all magic there is to testing. Your basic unit of testing is the *ok*. For each thing you test, an \"ok\" is printed. Simple. Test::Harness interprets your test results to determine if you succeeded or failed (more on that later). Writing all these print statements rapidly gets tedious. Fortunately, there's Test::Simple. It has one function, \"ok()\". #!/usr/bin/perl -w use Test::Simple tests => 1; ok( 1 + 1 == 2 ); That does the same thing as the previous code. \"ok()\" is the backbone of Perl testing, and we'll be using it instead of roll-your-own from here on. If \"ok()\" gets a true value, the test passes. False, it fails. #!/usr/bin/perl -w use Test::Simple tests => 2; ok( 1 + 1 == 2 ); ok( 2 + 2 == 5 ); From that comes: 1..2 ok 1 not ok 2 # Failed test (test.pl at line 5) # Looks like you failed 1 tests of 2. 1..2 \"I'm going to run two tests.\" This number is a *plan*. It helps to ensure your test program ran all the way through and didn't die or skip some tests. \"ok 1\" \"The first test passed.\" \"not ok 2\" \"The second test failed\". Test::Simple helpfully prints out some extra commentary about your tests. It's not scary. Come, hold my hand. We're going to give an example of testing a module. For our example, we'll be testing a date library, Date::ICal. It's on CPAN, so download a copy and follow along. [2] Where to start? This is the hardest part of testing, where do you start? People often get overwhelmed at the apparent enormity of the task of testing a whole module. The best place to start is at the beginning. Date::ICal is an object-oriented module, and that means you start by making an object. Test \"new()\". #!/usr/bin/perl -w # assume these two lines are in all subsequent examples use strict; use warnings; use Test::Simple tests => 2; use Date::ICal; my $ical = Date::ICal->new; # create an object ok( defined $ical ); # check that we got something ok( $ical->isa('Date::ICal') ); # and it's the right class Run that and you should get: 1..2 ok 1 ok 2 Congratulations! You've written your first useful test. Names That output isn't terribly descriptive, is it? When you have two tests you can figure out which one is #2, but what if you have 102 tests? Each test can be given a little descriptive name as the second argument to \"ok()\". use Test::Simple tests => 2; ok( defined $ical, 'new() returned something' ); ok( $ical->isa('Date::ICal'), \" and it's the right class\" ); Now you'll see: 1..2 ok 1 - new() returned something ok 2 - and it's the right class Test the manual The simplest way to build up a decent testing suite is to just test what the manual says it does. [3] Let's pull something out of the \"SYNOPSIS\" in Date::ICal and test that all its bits work. #!/usr/bin/perl -w use Test::Simple tests => 8; use Date::ICal; $ical = Date::ICal->new( year => 1964, month => 10, day => 16, hour => 16, min => 12, sec => 47, tz => '0530' ); ok( defined $ical, 'new() returned something' ); ok( $ical->isa('Date::ICal'), \" and it's the right class\" ); ok( $ical->sec == 47, ' sec()' ); ok( $ical->min == 12, ' min()' ); ok( $ical->hour == 16, ' hour()' ); ok( $ical->day == 17, ' day()' ); ok( $ical->month == 10, ' month()' ); ok( $ical->year == 1964, ' year()' ); Run that and you get: 1..8 ok 1 - new() returned something ok 2 - and it's the right class ok 3 - sec() ok 4 - min() ok 5 - hour() not ok 6 - day() # Failed test (- at line 16) ok 7 - month() ok 8 - year() # Looks like you failed 1 tests of 8. Whoops, a failure! [4] Test::Simple helpfully lets us know on what line the failure occurred, but not much else. We were supposed to get 17, but we didn't. What did we get?? Dunno. You could re-run the test in the debugger or throw in some print statements to find out. Instead, switch from Test::Simple to Test::More. Test::More does everything Test::Simple does, and more! In fact, Test::More does things *exactly* the way Test::Simple does. You can literally swap Test::Simple out and put Test::More in its place. That's just what we're going to do. Test::More does more than Test::Simple. The most important difference at this point is it provides more informative ways to say \"ok\". Although you can write almost any test with a generic \"ok()\", it can't tell you what went wrong. The \"is()\" function lets us declare that something is supposed to be the same as something else: use Test::More tests => 8; use Date::ICal; $ical = Date::ICal->new( year => 1964, month => 10, day => 16, hour => 16, min => 12, sec => 47, tz => '0530' ); ok( defined $ical, 'new() returned something' ); ok( $ical->isa('Date::ICal'), \" and it's the right class\" ); is( $ical->sec, 47, ' sec()' ); is( $ical->min, 12, ' min()' ); is( $ical->hour, 16, ' hour()' ); is( $ical->day, 17, ' day()' ); is( $ical->month, 10, ' month()' ); is( $ical->year, 1964, ' year()' ); \"Is \"$ical->sec\" 47?\" \"Is \"$ical->min\" 12?\" With \"is()\" in place, you get more information: 1..8 ok 1 - new() returned something ok 2 - and it's the right class ok 3 - sec() ok 4 - min() ok 5 - hour() not ok 6 - day() # Failed test (- at line 16) # got: '16' # expected: '17' ok 7 - month() ok 8 - year() # Looks like you failed 1 tests of 8. Aha. \"$ical->day\" returned 16, but we expected 17. A quick check shows that the code is working fine, we made a mistake when writing the tests. Change it to: is( $ical->day, 16, ' day()' ); ... and everything works. Any time you're doing a \"this equals that\" sort of test, use \"is()\". It even works on arrays. The test is always in scalar context, so you can test how many elements are in an array this way. [5] is( @foo, 5, 'foo has 5 elements' ); Sometimes the tests are wrong This brings up a very important lesson. Code has bugs. Tests are code. Ergo, tests have bugs. A failing test could mean a bug in the code, but don't discount the possibility that the test is wrong. On the flip side, don't be tempted to prematurely declare a test incorrect just because you're having trouble finding the bug. Invalidating a test isn't something to be taken lightly, and don't use it as a cop out to avoid work. Testing lots of values We're going to be wanting to test a lot of dates here, trying to trick the code with lots of different edge cases. Does it work before 1970? After 2038? Before 1904? Do years after 10,000 give it trouble? Does it get leap years right? We could keep repeating the code above, or we could set up a little try/expect loop. use Test::More tests => 32; use Date::ICal; my %ICal_Dates = ( # An ICal string And the year, month, day # hour, minute and second we expect. '19971024T120000' => # from the docs. [ 1997, 10, 24, 12, 0, 0 ], '20390123T232832' => # after the Unix epoch [ 2039, 1, 23, 23, 28, 32 ], '19671225T000000' => # before the Unix epoch [ 1967, 12, 25, 0, 0, 0 ], '18990505T232323' => # before the MacOS epoch [ 1899, 5, 5, 23, 23, 23 ], ); while( my($ical_str, $expect) = each %ICal_Dates ) { my $ical = Date::ICal->new( ical => $ical_str ); ok( defined $ical, \"new(ical => '$ical_str')\" ); ok( $ical->isa('Date::ICal'), \" and it's the right class\" ); is( $ical->year, $expect->[0], ' year()' ); is( $ical->month, $expect->[1], ' month()' ); is( $ical->day, $expect->[2], ' day()' ); is( $ical->hour, $expect->[3], ' hour()' ); is( $ical->min, $expect->[4], ' min()' ); is( $ical->sec, $expect->[5], ' sec()' ); } Now we can test bunches of dates by just adding them to %ICal_Dates. Now that it's less work to test with more dates, you'll be inclined to just throw more in as you think of them. Only problem is, every time we add to that we have to keep adjusting the \"use Test::More tests => ##\" line. That can rapidly get annoying. There are ways to make this work better. First, we can calculate the plan dynamically using the \"plan()\" function. use Test::More; use Date::ICal; my %ICal_Dates = ( ...same as before... ); # For each key in the hash we're running 8 tests. plan tests => keys(%ICal_Dates) * 8; ...and then your tests... To be even more flexible, use \"done_testing\". This means we're just running some tests, don't know how many. [6] use Test::More; # instead of tests => 32 ... # tests here done_testing(); # reached the end safely If you don't specify a plan, Test::More expects to see \"done_testing()\" before your program exits. It will warn you if you forget it. You can give \"done_testing()\" an optional number of tests you expected to run, and if the number ran differs, Test::More will give you another kind of warning. Informative names Take a look at the line: ok( defined $ical, \"new(ical => '$ical_str')\" ); We've added more detail about what we're testing and the ICal string itself we're trying out to the name. So you get results like: ok 25 - new(ical => '19971024T120000') ok 26 - and it's the right class ok 27 - year() ok 28 - month() ok 29 - day() ok 30 - hour() ok 31 - min() ok 32 - sec() If something in there fails, you'll know which one it was and that will make tracking down the problem easier. Try to put a bit of debugging information into the test names. Describe what the tests test, to make debugging a failed test easier for you or for the next person who runs your test. Skipping tests Poking around in the existing Date::ICal tests, I found this in t/01sanity.t [7] #!/usr/bin/perl -w use Test::More tests => 7; use Date::ICal; # Make sure epoch time is being handled sanely. my $t1 = Date::ICal->new( epoch => 0 ); is( $t1->epoch, 0, \"Epoch time of 0\" ); # XXX This will only work on unix systems. is( $t1->ical, '19700101Z', \" epoch to ical\" ); is( $t1->year, 1970, \" year()\" ); is( $t1->month, 1, \" month()\" ); is( $t1->day, 1, \" day()\" ); # like the tests above, but starting with ical instead of epoch my $t2 = Date::ICal->new( ical => '19700101Z' ); is( $t2->ical, '19700101Z', \"Start of epoch in ICal notation\" ); is( $t2->epoch, 0, \" and back to ICal\" ); The beginning of the epoch is different on most non-Unix operating systems [8]. Even though Perl smooths out the differences for the most part, certain ports do it differently. MacPerl is one off the top of my head. [9] Rather than putting a comment in the test and hoping someone will read the test while debugging the failure, we can explicitly say it's never going to work and skip the test. use Test::More tests => 7; use Date::ICal; # Make sure epoch time is being handled sanely. my $t1 = Date::ICal->new( epoch => 0 ); is( $t1->epoch, 0, \"Epoch time of 0\" ); SKIP: { skip('epoch to ICal not working on Mac OS', 6) if $^O eq 'MacOS'; is( $t1->ical, '19700101Z', \" epoch to ical\" ); is( $t1->year, 1970, \" year()\" ); is( $t1->month, 1, \" month()\" ); is( $t1->day, 1, \" day()\" ); # like the tests above, but starting with ical instead of epoch my $t2 = Date::ICal->new( ical => '19700101Z' ); is( $t2->ical, '19700101Z', \"Start of epoch in ICal notation\" ); is( $t2->epoch, 0, \" and back to ICal\" ); } A little bit of magic happens here. When running on anything but MacOS, all the tests run normally. But when on MacOS, \"skip()\" causes the entire contents of the SKIP block to be jumped over. It never runs. Instead, \"skip()\" prints special output that tells Test::Harness that the tests have been skipped. 1..7 ok 1 - Epoch time of 0 ok 2 # skip epoch to ICal not working on MacOS ok 3 # skip epoch to ICal not working on MacOS ok 4 # skip epoch to ICal not working on MacOS ok 5 # skip epoch to ICal not working on MacOS ok 6 # skip epoch to ICal not working on MacOS ok 7 # skip epoch to ICal not working on MacOS This means your tests won't fail on MacOS. This means fewer emails from MacPerl users telling you about failing tests that you know will never work. You've got to be careful with skip tests. These are for tests which don't work and *never will*. It is not for skipping genuine bugs (we'll get to that in a moment). The tests are wholly and completely skipped. [10] This will work. SKIP: { skip(\"I don't wanna die!\"); die, die, die, die, die; } Todo tests While thumbing through the Date::ICal man page, I came across this: ical $ical_string = $ical->ical; Retrieves, or sets, the date on the object, using any valid ICal date/time string. \"Retrieves or sets\". Hmmm. I didn't see a test for using \"ical()\" to set the date in the Date::ICal test suite. So I wrote one: use Test::More tests => 1; use Date::ICal; my $ical = Date::ICal->new; $ical->ical('20201231Z'); is( $ical->ical, '20201231Z', 'Setting via ical()' ); Run that. I saw: 1..1 not ok 1 - Setting via ical() # Failed test (- at line 6) # got: '20010814T233649Z' # expected: '20201231Z' # Looks like you failed 1 tests of 1. Whoops! Looks like it's unimplemented. Assume you don't have the time to fix this. [11] Normally, you'd just comment out the test and put a note in a todo list somewhere. Instead, explicitly state \"this test will fail\" by wrapping it in a \"TODO\" block: use Test::More tests => 1; TODO: { local $TODO = 'ical($ical) not yet implemented'; my $ical = Date::ICal->new; $ical->ical('20201231Z'); is( $ical->ical, '20201231Z', 'Setting via ical()' ); } Now when you run, it's a little different: 1..1 not ok 1 - Setting via ical() # TODO ical($ical) not yet implemented # got: '20010822T201551Z' # expected: '20201231Z' Test::More doesn't say \"Looks like you failed 1 tests of 1\". That '# TODO' tells Test::Harness \"this is supposed to fail\" and it treats a failure as a successful test. You can write tests even before you've fixed the underlying code. If a TODO test passes, Test::Harness will report it \"UNEXPECTEDLY SUCCEEDED\". When that happens, remove the TODO block with \"local $TODO\" and turn it into a real test. Testing with taint mode. Taint mode is a funny thing. It's the globalest of all global features. Once you turn it on, it affects *all* code in your program and *all* modules used (and all the modules they use). If a single piece of code isn't taint clean, the whole thing explodes. With that in mind, it's very important to ensure your module works under taint mode. It's very simple to have your tests run under taint mode. Just throw a \"-T\" into the \"#!\" line. Test::Harness will read the switches in \"#!\" and use them to run your tests. #!/usr/bin/perl -Tw ...test normally here... When you say \"make test\" it will run with taint mode on. FOOTNOTES 1 The first number doesn't really mean anything, but it has to be 1. It's the second number that's important. 2 For those following along at home, I'm using version 1.31. It has some bugs, which is good -- we'll uncover them with our tests. 3 You can actually take this one step further and test the manual itself. Have a look at Test::Inline (formerly Pod::Tests). 4 Yes, there's a mistake in the test suite. What! Me, contrived? 5 We'll get to testing the contents of lists later. 6 But what happens if your test program dies halfway through?! Since we didn't say how many tests we're going to run, how can we know it failed? No problem, Test::More employs some magic to catch that death and turn the test into a failure, even if every test passed up to that point. 7 I cleaned it up a little. 8 Most Operating Systems record time as the number of seconds since a certain date. This date is the beginning of the epoch. Unix's starts at midnight January 1st, 1970 GMT. 9 MacOS's epoch is midnight January 1st, 1904. VMS's is midnight, November 17th, 1858, but vmsperl emulates the Unix epoch so it's not a problem. 10 As long as the code inside the SKIP block at least compiles. Please don't ask how. No, it's not a filter. 11 Do NOT be tempted to use TODO tests as a way to avoid fixing simple bugs! AUTHORS Michael G Schwern <schwern@pobox.com> and the perl-qa dancers! MAINTAINERS Chad Granum <exodist@cpan.org> COPYRIGHT Copyright 2001 by Michael G Schwern <schwern@pobox.com>. This documentation is free; you can redistribute it and/or modify it under the same terms as Perl itself. Irrespective of its distribution, all code examples in these files are hereby placed into the public domain. You are permitted and encouraged to use this code in your own programs for fun or for profit as you see fit. A simple comment in the code giving credit would be courteous but is not required. ",
               "slop" : 424,
               "version_numified" : 1.001007,
               "documentation" : "Test::Tutorial",
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [
                  [
                     0,
                     618
                  ]
               ],
               "distribution" : "Test-Simple",
               "mime" : "text/x-pod",
               "level" : 2,
               "authorized" : true,
               "binary" : false,
               "path" : "lib/Test/Tutorial.pod",
               "directory" : false,
               "description" : "*AHHHHHHH!!!! NOT TESTING! Anything but testing! Beat me, whip me, send me to Detroit, but don't make me write tests!* **sob** *Besides, I don't know how to write the damned things.* Is this you? Is writing tests right up there with writing documentation and having your fingernails pulled out? Did you open up a test and read ######## We start with some black magic and decide that's quite enough for you? It's ok. That's all gone now. We've done all the black magic for you. And here are the tricks... Nuts and bolts of testing. Here's the most basic test program. #!/usr/bin/perl -w print \"1..1\\n\"; print 1 + 1 == 2 ? \"ok 1\\n\" : \"not ok 1\\n\"; Because 1 + 1 is 2, it prints: 1..1 ok 1 What this says is: 1..1 \"I'm going to run one test.\" [1] \"ok 1\" \"The first test passed\". And that's about all magic there is to testing. Your basic unit of testing is the *ok*. For each thing you test, an \"ok\" is printed. Simple. Test::Harness interprets your test results to determine if you succeeded or failed (more on that later). Writing all these print statements rapidly gets tedious. Fortunately, there's Test::Simple. It has one function, \"ok()\". #!/usr/bin/perl -w use Test::Simple tests => 1; ok( 1 + 1 == 2 ); That does the same thing as the previous code. \"ok()\" is the backbone of Perl testing, and we'll be using it instead of roll-your-own from here on. If \"ok()\" gets a true value, the test passes. False, it fails. #!/usr/bin/perl -w use Test::Simple tests => 2; ok( 1 + 1 == 2 ); ok( 2 + 2 == 5 ); From that comes: 1..2 ok 1 not ok 2 # Failed test (test.pl at line 5) # Looks like you failed 1 tests of 2. 1..2 \"I'm going to run two tests.\" This number is a *plan*. It helps to ensure your test program ran all the way through and didn't die or skip some tests. \"ok 1\" \"The first test passed.\" \"not ok 2\" \"The second test failed\". Test::Simple helpfully prints out some extra commentary about your tests. It's not scary. Come, hold my hand. We're going to give an example of testing a module. For our example, we'll be testing a date library, Date::ICal. It's on CPAN, so download a copy and follow along. [2] Where to start? This is the hardest part of testing, where do you start? People often get overwhelmed at the apparent enormity of the task of testing a whole module. The best place to start is at the beginning. Date::ICal is an object-oriented module, and that means you start by making an object. Test \"new()\". #!/usr/bin/perl -w # assume these two lines are in all subsequent examples use strict; use warnings; use Test::Simple tests => 2; use Date::ICal; my $ical = Date::ICal->new; # create an object ok( defined $ical ); # check that we got something ok( $ical->isa('Date::ICal') ); # and it's the right class Run that and you should get: 1..2 ok 1 ok 2 Congratulations! You've written your first useful test. Names That output isn't terribly descriptive, is it? When you have two tests you can figure out which one is #2, but what if you have 102 tests? Each test can be given a little descriptive name as the second argument to \"ok()\". use Test::Simple tests => 2; ok( defined $ical, 'new() returned something' ); ok( $ical->isa('Date::ICal'), \" and it's the right class\" ); Now you'll see: 1..2 ok 1 - new() returned something ok 2 - and it's the right class Test the manual The simplest way to build up a decent testing suite is to just test what the manual says it does. [3] Let's pull something out of the \"SYNOPSIS\" in Date::ICal and test that all its bits work. #!/usr/bin/perl -w use Test::Simple tests => 8; use Date::ICal; $ical = Date::ICal->new( year => 1964, month => 10, day => 16, hour => 16, min => 12, sec => 47, tz => '0530' ); ok( defined $ical, 'new() returned something' ); ok( $ical->isa('Date::ICal'), \" and it's the right class\" ); ok( $ical->sec == 47, ' sec()' ); ok( $ical->min == 12, ' min()' ); ok( $ical->hour == 16, ' hour()' ); ok( $ical->day == 17, ' day()' ); ok( $ical->month == 10, ' month()' ); ok( $ical->year == 1964, ' year()' ); Run that and you get: 1..8 ok 1 - new() returned something ok 2 - and it's the right class ok 3 - sec() ok 4 - min() ok 5 - hour() not ok 6 - day() # Failed test (- at line 16) ok 7 - month() ok 8 - year() # Looks like you failed 1 tests of 8. Whoops, a failure! [4] Test::Simple helpfully lets us know on what line the failure occurred, but not much else. We were supposed to get 17, but we didn't. What did we get?? Dunno. You could re-run the test in the debugger or throw in some print statements to find out. Instead, switch from Test::Simple to Test::More. Test::More does everything Test::Simple does, and more! In fact, Test::More does things *exactly* the way Test::Simple does. You can literally swap Test::Simple out and put Test::More in its place. That's just what we're going to do. Test::More does more than Test::Simple. The most important difference at this point is it provides more informative ways to say \"ok\". Although you can write almost any test with a generic \"ok()\", it can't tell you what went wrong. The \"is()\" function lets us declare that something is supposed to be the same as something else: use Test::More tests => 8; use Date::ICal; $ical = Date::ICal->new( year => 1964, month => 10, day => 16, hour => 16, min => 12, sec => 47, tz => '0530' ); ok( defined $ical, 'new() returned something' ); ok( $ical->isa('Date::ICal'), \" and it's the right class\" ); is( $ical->sec, 47, ' sec()' ); is( $ical->min, 12, ' min()' ); is( $ical->hour, 16, ' hour()' ); is( $ical->day, 17, ' day()' ); is( $ical->month, 10, ' month()' ); is( $ical->year, 1964, ' year()' ); \"Is \"$ical->sec\" 47?\" \"Is \"$ical->min\" 12?\" With \"is()\" in place, you get more information: 1..8 ok 1 - new() returned something ok 2 - and it's the right class ok 3 - sec() ok 4 - min() ok 5 - hour() not ok 6 - day() # Failed test (- at line 16) # got: '16' # expected: '17' ok 7 - month() ok 8 - year() # Looks like you failed 1 tests of 8. Aha. \"$ical->day\" returned 16, but we expected 17. A quick check shows that the code is working fine, we made a mistake when writing the tests. Change it to: is( $ical->day, 16, ' day()' ); ... and everything works. Any time you're doing a \"this equals that\" sort of test, use \"is()\". It even works on arrays. The test is always in scalar context, so you can test how many elements are in an array this way. [5] is( @foo, 5, 'foo has 5 elements' ); Sometimes the tests are wrong This brings up a very important lesson. Code has bugs. Tests are code. Ergo, tests have bugs. A failing test could mean a bug in the code, but don't discount the possibility that the test is wrong. On the flip side, don't be tempted to prematurely declare a test incorrect just because you're having trouble finding the bug. Invalidating a test isn't something to be taken lightly, and don't use it as a cop out to avoid work. Testing lots of values We're going to be wanting to test a lot of dates here, trying to trick the code with lots of different edge cases. Does it work before 1970? After 2038? Before 1904? Do years after 10,000 give it trouble? Does it get leap years right? We could keep repeating the code above, or we could set up a little try/expect loop. use Test::More tests => 32; use Date::ICal; my %ICal_Dates = ( # An ICal string And the year, month, day # hour, minute and second we expect. '19971024T120000' => # from the docs. [ 1997, 10, 24, 12, 0, 0 ], '20390123T232832' => # after the Unix epoch [ 2039, 1, 23, 23, 28, 32 ], '19671225T000000' => # before the Unix epoch [ 1967, 12, 25, 0, 0, 0 ], '18990505T232323' => # before the MacOS epoch [ 1899, 5, 5, 23, 23, 23 ], ); while( my($ical_str, $expect) = each %ICal_Dates ) { my $ical = Date::ICal->new( ical => $ical_str ); ok( defined $ical, \"new(ical => '$ical_str')\" ); ok( $ical->isa('Date::ICal'), \" and it's the right class\" ); is( $ical->year, $expect->[0], ' year()' ); is( $ical->month, $expect->[1], ' month()' ); is( $ical->day, $expect->[2], ' day()' ); is( $ical->hour, $expect->[3], ' hour()' ); is( $ical->min, $expect->[4], ' min()' ); is( $ical->sec, $expect->[5], ' sec()' ); } Now we can test bunches of dates by just adding them to %ICal_Dates. Now that it's less work to test with more dates, you'll be inclined to just throw more in as you think of them. Only problem is, every time we add to that we have to keep adjusting the \"use Test::More tests => ##\" line. That can rapidly get annoying. There are ways to make this work better. First, we can calculate the plan dynamically using the \"plan()\" function. use Test::More; use Date::ICal; my %ICal_Dates = ( ...same as before... ); # For each key in the hash we're running 8 tests. plan tests => keys(%ICal_Dates) * 8; ...and then your tests... To be even more flexible, use \"done_testing\". This means we're just running some tests, don't know how many. [6] use Test::More; # instead of tests => 32 ... # tests here done_testing(); # reached the end safely If you don't specify a plan, Test::More expects to see \"done_testing()\" before your program exits. It will warn you if you forget it. You can give \"done_testing()\" an optional number of tests you expected to run, and if the number ran differs, Test::More will give you another kind of warning. Informative names Take a look at the line: ok( defined $ical, \"new(ical => '$ical_str')\" ); We've added more detail about what we're testing and the ICal string itself we're trying out to the name. So you get results like: ok 25 - new(ical => '19971024T120000') ok 26 - and it's the right class ok 27 - year() ok 28 - month() ok 29 - day() ok 30 - hour() ok 31 - min() ok 32 - sec() If something in there fails, you'll know which one it was and that will make tracking down the problem easier. Try to put a bit of debugging information into the test names. Describe what the tests test, to make debugging a failed test easier for you or for the next person who runs your test. Skipping tests Poking around in the existing Date::ICal tests, I found this in t/01sanity.t [7] #!/usr/bin/perl -w use Test::More tests => 7; use Date::ICal; # Make sure epoch time is being handled sanely. my $t1 = Date::ICal->new( epoch => 0 ); is( $t1->epoch, 0, \"Epoch time of 0\" ); # XXX This will only work on unix systems. is( $t1->ical, '19700101Z', \" epoch to ical\" ); is( $t1->year, 1970, \" year()\" ); is( $t1->month, 1, \" month()\" ); is( $t1->day, 1, \" day()\" ); # like the tests above, but starting with ical instead of epoch my $t2 = Date::ICal->new( ical => '19700101Z' ); is( $t2->ical, '19700101Z', \"Start of epoch in ICal notation\" ); is( $t2->epoch, 0, \" and back to ICal\" ); The beginning of the epoch is different on most non-Unix operating systems [8]. Even though Perl smooths out the differences for the most part, certain ports do it differently. MacPerl is one off the top of my head. [9] Rather than putting a comment in the test and hoping someone will read the test while debugging the failure, we can explicitly say it's never going to work and skip the test. use Test::More tests => 7; use Date::ICal; # Make sure epoch time is being handled sanely. my $t1 = Date::ICal->new( epoch => 0 ); is( $t1->epoch, 0, \"Epoch time of 0\" ); SKIP: { skip('epoch to ICal not working on Mac OS', 6) if $^O eq 'MacOS'; is( $t1->ical, '19700101Z', \" epoch to ical\" ); is( $t1->year, 1970, \" year()\" ); is( $t1->month, 1, \" month()\" ); is( $t1->day, 1, \" day()\" ); # like the tests above, but starting with ical instead of epoch my $t2 = Date::ICal->new( ical => '19700101Z' ); is( $t2->ical, '19700101Z', \"Start of epoch in ICal notation\" ); is( $t2->epoch, 0, \" and back to ICal\" ); } A little bit of magic happens here. When running on anything but MacOS, all the tests run normally. But when on MacOS, \"skip()\" causes the entire contents of the SKIP block to be jumped over. It never runs. Instead, \"skip()\" prints special output that tells Test::Harness that the tests have been skipped. 1..7 ok 1 - Epoch time of 0 ok 2 # skip epoch to ICal not working on MacOS ok 3 # skip epoch to ICal not working on MacOS ok 4 # skip epoch to ICal not working on MacOS ok 5 # skip epoch to ICal not working on MacOS ok 6 # skip epoch to ICal not working on MacOS ok 7 # skip epoch to ICal not working on MacOS This means your tests won't fail on MacOS. This means fewer emails from MacPerl users telling you about failing tests that you know will never work. You've got to be careful with skip tests. These are for tests which don't work and *never will*. It is not for skipping genuine bugs (we'll get to that in a moment). The tests are wholly and completely skipped. [10] This will work. SKIP: { skip(\"I don't wanna die!\"); die, die, die, die, die; } Todo tests While thumbing through the Date::ICal man page, I came across this: ical $ical_string = $ical->ical; Retrieves, or sets, the date on the object, using any valid ICal date/time string. \"Retrieves or sets\". Hmmm. I didn't see a test for using \"ical()\" to set the date in the Date::ICal test suite. So I wrote one: use Test::More tests => 1; use Date::ICal; my $ical = Date::ICal->new; $ical->ical('20201231Z'); is( $ical->ical, '20201231Z', 'Setting via ical()' ); Run that. I saw: 1..1 not ok 1 - Setting via ical() # Failed test (- at line 6) # got: '20010814T233649Z' # expected: '20201231Z' # Looks like you failed 1 tests of 1. Whoops! Looks like it's unimplemented. Assume you don't have the time to fix this. [11] Normally, you'd just comment out the test and put a note in a todo list somewhere. Instead, explicitly state \"this test will fail\" by wrapping it in a \"TODO\" block: use Test::More tests => 1; TODO: { local $TODO = 'ical($ical) not yet implemented'; my $ical = Date::ICal->new; $ical->ical('20201231Z'); is( $ical->ical, '20201231Z', 'Setting via ical()' ); } Now when you run, it's a little different: 1..1 not ok 1 - Setting via ical() # TODO ical($ical) not yet implemented # got: '20010822T201551Z' # expected: '20201231Z' Test::More doesn't say \"Looks like you failed 1 tests of 1\". That '# TODO' tells Test::Harness \"this is supposed to fail\" and it treats a failure as a successful test. You can write tests even before you've fixed the underlying code. If a TODO test passes, Test::Harness will report it \"UNEXPECTEDLY SUCCEEDED\". When that happens, remove the TODO block with \"local $TODO\" and turn it into a real test. Testing with taint mode. Taint mode is a funny thing. It's the globalest of all global features. Once you turn it on, it affects *all* code in your program and *all* modules used (and all the modules they use). If a single piece of code isn't taint clean, the whole thing explodes. With that in mind, it's very important to ensure your module works under taint mode. It's very simple to have your tests run under taint mode. Just throw a \"-T\" into the \"#!\" line. Test::Harness will read the switches in \"#!\" and use them to run your tests. #!/usr/bin/perl -Tw ...test normally here... When you say \"make test\" it will run with taint mode on.",
               "sloc" : 0,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 19343,
                  "uid" : 1009,
                  "mtime" : 1408491379
               }
            },
            "_id" : "8WYajjcR_jYVaPYtQI0_veUMPNc"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.231414,
            "_id" : "ucv6KOvR5RR243a7nXC27jDguLI",
            "_source" : {
               "description" : "** If you are unfamiliar with testing read Test::Tutorial first! ** This is an extremely simple, extremely basic module for writing tests suitable for CPAN modules and other pursuits. If you wish to do more complicated testing, use the Test::More module (a drop-in replacement for this one). The basic unit of Perl testing is the ok. For each thing you want to test your program will print out an \"ok\" or \"not ok\" to indicate pass or fail. You do this with the \"ok()\" function (see below). The only other constraint is you must pre-declare how many tests you plan to run. This is in case something goes horribly wrong during the test and your test program aborts, or skips a test or whatever. You do this like so: use Test::Simple tests => 23; You must have a plan. ok ok( $foo eq $bar, $name ); ok( $foo eq $bar ); \"ok()\" is given an expression (in this case \"$foo eq $bar\"). If it's true, the test passed. If it's false, it didn't. That's about it. \"ok()\" prints out either \"ok\" or \"not ok\" along with a test number (it keeps track of that for you). # This produces \"ok 1 - Hell not yet frozen over\" (or not ok) ok( get_temperature($hell) > 0, 'Hell not yet frozen over' ); If you provide a $name, that will be printed along with the \"ok/not ok\" to make it easier to find your test when if fails (just search for the name). It also makes it easier for the next guy to understand what your test is for. It's highly recommended you use test names. All tests are run in scalar context. So this: ok( @stuff, 'I have some stuff' ); will do what you mean (fail if stuff is empty) POD ERRORS Hey! The above document had some coding errors, which are explained below: Around line 24: =over without closing =back",
               "path" : "lib/Test/Simple.pm",
               "directory" : false,
               "sloc" : 13,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 6579,
                  "mtime" : 1413416218
               },
               "maturity" : "released",
               "level" : 2,
               "mime" : "text/x-script.perl-module",
               "authorized" : true,
               "binary" : false,
               "slop" : 128,
               "pod" : "NAME Test::Simple - Basic utilities for writing tests. SYNOPSIS use Test::Simple tests => 1; ok( $foo eq $bar, 'foo is bar' ); DESCRIPTION ** If you are unfamiliar with testing read Test::Tutorial first! ** This is an extremely simple, extremely basic module for writing tests suitable for CPAN modules and other pursuits. If you wish to do more complicated testing, use the Test::More module (a drop-in replacement for this one). The basic unit of Perl testing is the ok. For each thing you want to test your program will print out an \"ok\" or \"not ok\" to indicate pass or fail. You do this with the \"ok()\" function (see below). The only other constraint is you must pre-declare how many tests you plan to run. This is in case something goes horribly wrong during the test and your test program aborts, or skips a test or whatever. You do this like so: use Test::Simple tests => 23; You must have a plan. ok ok( $foo eq $bar, $name ); ok( $foo eq $bar ); \"ok()\" is given an expression (in this case \"$foo eq $bar\"). If it's true, the test passed. If it's false, it didn't. That's about it. \"ok()\" prints out either \"ok\" or \"not ok\" along with a test number (it keeps track of that for you). # This produces \"ok 1 - Hell not yet frozen over\" (or not ok) ok( get_temperature($hell) > 0, 'Hell not yet frozen over' ); If you provide a $name, that will be printed along with the \"ok/not ok\" to make it easier to find your test when if fails (just search for the name). It also makes it easier for the next guy to understand what your test is for. It's highly recommended you use test names. All tests are run in scalar context. So this: ok( @stuff, 'I have some stuff' ); will do what you mean (fail if stuff is empty) Test::Simple will start by printing number of tests run in the form \"1..M\" (so \"1..5\" means you're going to run 5 tests). This strange format lets Test::Harness know how many tests you plan on running in case something goes horribly wrong. If all your tests passed, Test::Simple will exit with zero (which is normal). If anything failed it will exit with how many failed. If you run less (or more) tests than you planned, the missing (or extras) will be considered failures. If no tests were ever run Test::Simple will throw a warning and exit with 255. If the test died, even after having successfully completed all its tests, it will still be considered a failure and will exit with 255. So the exit codes are... 0 all tests successful 255 test died or all passed but wrong # of tests run any other number how many failed (including missing or extras) If you fail more than 254 tests, it will be reported as 254. This module is by no means trying to be a complete testing system. It's just to get you started. Once you're off the ground its recommended you look at Test::More. EXAMPLE Here's an example of a simple .t file for the fictional Film module. use Test::Simple tests => 5; use Film; # What you're testing. my $btaste = Film->new({ Title => 'Bad Taste', Director => 'Peter Jackson', Rating => 'R', NumExplodingSheep => 1 }); ok( defined($btaste) && ref $btaste eq 'Film', 'new() works' ); ok( $btaste->Title eq 'Bad Taste', 'Title() get' ); ok( $btaste->Director eq 'Peter Jackson', 'Director() get' ); ok( $btaste->Rating eq 'R', 'Rating() get' ); ok( $btaste->NumExplodingSheep == 1, 'NumExplodingSheep() get' ); It will produce output like this: 1..5 ok 1 - new() works ok 2 - Title() get ok 3 - Director() get not ok 4 - Rating() get # Failed test 'Rating() get' # in t/film.t at line 14. ok 5 - NumExplodingSheep() get # Looks like you failed 1 tests of 5 Indicating the Film::Rating() method is broken. CAVEATS Test::Simple will only report a maximum of 254 failures in its exit code. If this is a problem, you probably have a huge test script. Split it into multiple files. (Otherwise blame the Unix folks for using an unsigned short integer as the exit status). Because VMS's exit codes are much, much different than the rest of the universe, and perl does horrible mangling to them that gets in my way, it works like this on VMS. 0 SS$_NORMAL all tests successful 4 SS$_ABORT something went wrong Unfortunately, I can't differentiate any further. NOTES Test::Simple is explicitly tested all the way back to perl 5.6.0. Test::Simple is thread-safe in perl 5.8.1 and up. HISTORY This module was conceived while talking with Tony Bowden in his kitchen one night about the problems I was having writing some really complicated feature into the new Testing module. He observed that the main problem is not dealing with these edge cases but that people hate to write tests at all. What was needed was a dead simple module that took all the hard work out of testing and was really, really easy to learn. Paul Johnson simultaneously had this idea (unfortunately, he wasn't in Tony's kitchen). This is it. SEE ALSO Test::More More testing functions! Once you outgrow Test::Simple, look at Test::More. Test::Simple is 100% forward compatible with Test::More (i.e. you can just use Test::More instead of Test::Simple in your programs and things will still work). Look in Test::More's SEE ALSO for more testing modules. AUTHORS Idea by Tony Bowden and Paul Johnson, code by Michael G Schwern <schwern@pobox.com>, wardrobe by Calvin Klein. MAINTAINERS Chad Granum <exodist@cpan.org> COPYRIGHT Copyright 2001-2008 by Michael G Schwern <schwern@pobox.com>. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See http://www.perl.com/perl/misc/Artistic.html ",
               "module" : [
                  {
                     "version" : "1.001007",
                     "version_numified" : 1.001007,
                     "indexed" : true,
                     "associated_pod" : "EXODIST/Test-Simple-1.001007/lib/Test/Simple.pm",
                     "authorized" : true,
                     "name" : "Test::Simple"
                  }
               ],
               "distribution" : "Test-Simple",
               "pod_lines" : [
                  [
                     15,
                     62
                  ],
                  [
                     82,
                     137
                  ]
               ],
               "version_numified" : 1.001007,
               "documentation" : "Test::Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "author" : "EXODIST",
               "name" : "Simple.pm",
               "release" : "Test-Simple-1.001007",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "id" : "ucv6KOvR5RR243a7nXC27jDguLI",
               "abstract" : "Basic utilities for writing tests."
            }
         },
         {
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 629,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "directory" : false,
               "path" : "t/threads.t",
               "sloc" : 26,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "0l1B7n_3oIx7sBkkuAGJKO0yLCY",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "threads.t"
            },
            "_id" : "0l1B7n_3oIx7sBkkuAGJKO0yLCY",
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.231414
         },
         {
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "is_deeply_dne_bug.t",
               "id" : "lAYn_9pxPTjQhJ3u5elIUIEyl30",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "path" : "t/is_deeply_dne_bug.t",
               "directory" : false,
               "sloc" : 31,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 887,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false
            },
            "_id" : "lAYn_9pxPTjQhJ3u5elIUIEyl30",
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "oAr0nrhjhI0m9CDHmvuXK6Sskmc",
            "_source" : {
               "sloc" : 38,
               "directory" : false,
               "path" : "t/overload_threads.t",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 1063,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "name" : "overload_threads.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "oAr0nrhjhI0m9CDHmvuXK6Sskmc"
            }
         },
         {
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "path" : "t/exit.t",
               "directory" : false,
               "sloc" : 84,
               "stat" : {
                  "size" : 3158,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "author" : "EXODIST",
               "name" : "exit.t",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "2DqL4uIHpBAOsamefcPu2aLngSM"
            },
            "_id" : "2DqL4uIHpBAOsamefcPu2aLngSM"
         },
         {
            "_id" : "iaTEiDIhujCuPXFFAGJRjqNVGGw",
            "_source" : {
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "iaTEiDIhujCuPXFFAGJRjqNVGGw",
               "author" : "EXODIST",
               "name" : "00test_harness_check.t",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "stat" : {
                  "size" : 764,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "path" : "t/00test_harness_check.t",
               "directory" : false,
               "sloc" : 16
            },
            "_score" : 12.231414,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "uid" : 1009,
                  "size" : 3360,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "sloc" : 113,
               "directory" : false,
               "path" : "t/todo.t",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "DZ7Q9pnRuS_fRf5BSbzgf2nc3aM",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "todo.t",
               "author" : "EXODIST"
            },
            "_id" : "DZ7Q9pnRuS_fRf5BSbzgf2nc3aM",
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_source" : {
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "binary" : false,
               "sloc" : 62,
               "path" : "t/overload.t",
               "directory" : false,
               "stat" : {
                  "uid" : 1009,
                  "size" : 2181,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "name" : "overload.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "_RuCYNIfSI9EJ1jzL2A35IiU22A",
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007
            },
            "_id" : "_RuCYNIfSI9EJ1jzL2A35IiU22A",
            "_score" : 12.231414,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "5K5uaAPWSipifrYQ2Pz5WiTfXdc",
            "_source" : {
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "stat" : {
                  "size" : 1381,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "sloc" : 46,
               "path" : "t/harness_active.t",
               "directory" : false,
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "5K5uaAPWSipifrYQ2Pz5WiTfXdc",
               "name" : "harness_active.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : ""
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.231414
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.231414,
            "_source" : {
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false,
               "directory" : false,
               "path" : "t/bad_plan.t",
               "sloc" : 17,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 495,
                  "mtime" : 1413416121
               },
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "bad_plan.t",
               "id" : "Eb0e0hW6WnRbj145mY7Yvhqe7G4",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : []
            },
            "_id" : "Eb0e0hW6WnRbj145mY7Yvhqe7G4"
         },
         {
            "_score" : 12.231414,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "AqiOTO_eqGuoNPjoIaGOzL97HVM",
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "name" : "is_deeply_with_threads.t",
               "author" : "EXODIST",
               "id" : "AqiOTO_eqGuoNPjoIaGOzL97HVM",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "sloc" : 51,
               "directory" : false,
               "path" : "t/is_deeply_with_threads.t",
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 1434,
                  "uid" : 1009
               },
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "binary" : false
            }
         },
         {
            "_id" : "U5z1d_jG10OhUQWY8IXEnw_osr8",
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "name" : "args.t",
               "author" : "EXODIST",
               "id" : "U5z1d_jG10OhUQWY8IXEnw_osr8",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false,
               "sloc" : 25,
               "path" : "t/subtest/args.t",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "uid" : 1009,
                  "size" : 688,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               }
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.231414
         },
         {
            "_source" : {
               "path" : "t/Builder/is_fh.t",
               "directory" : false,
               "sloc" : 35,
               "stat" : {
                  "uid" : 1009,
                  "size" : 975,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "author" : "EXODIST",
               "name" : "is_fh.t",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "xYvWBPuP_Je1noXufCx82EzI2kI"
            },
            "_id" : "xYvWBPuP_Je1noXufCx82EzI2kI",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.231414
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.231414,
            "_source" : {
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "author" : "EXODIST",
               "name" : "reset_outputs.t",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "oPYPAo32B9htIkp_nPaCEyq8Lqg",
               "path" : "t/Builder/reset_outputs.t",
               "directory" : false,
               "sloc" : 26,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 784,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "binary" : false
            },
            "_id" : "oPYPAo32B9htIkp_nPaCEyq8Lqg"
         },
         {
            "_score" : 12.231414,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "DfG4N07LAbuXK2_zbPlM5PNRIUc",
               "name" : "has_plan.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 366,
                  "uid" : 1009
               },
               "maturity" : "released",
               "sloc" : 16,
               "directory" : false,
               "path" : "t/Builder/has_plan.t"
            },
            "_id" : "DfG4N07LAbuXK2_zbPlM5PNRIUc"
         },
         {
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "size" : 4096,
                  "uid" : 1009,
                  "mtime" : 1413943292,
                  "gid" : 1009,
                  "mode" : 16877
               },
               "sloc" : 0,
               "path" : "t",
               "directory" : true,
               "binary" : true,
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "kQFWVyni9KfT_f_pgnTJ1SOvFG0",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "t",
               "author" : "EXODIST"
            },
            "_id" : "kQFWVyni9KfT_f_pgnTJ1SOvFG0",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.231414
         },
         {
            "_source" : {
               "id" : "Y9OT7Il1S2nx1cLFT0jz2C9mRdg",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "require_ok.t",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 786,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "path" : "t/require_ok.t",
               "directory" : false,
               "sloc" : 19
            },
            "_id" : "Y9OT7Il1S2nx1cLFT0jz2C9mRdg",
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.231414
         },
         {
            "_id" : "GE1tlt3HMdbImeCO8aCv7dwgfFE",
            "_source" : {
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "binary" : false,
               "sloc" : 35,
               "path" : "t/fail.t",
               "directory" : false,
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 1066,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "name" : "fail.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "GE1tlt3HMdbImeCO8aCv7dwgfFE",
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.231414
         },
         {
            "_source" : {
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 562,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/eq_set.t",
               "sloc" : 23,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "BHo7ZLL4rxhgswqAmP1A6QAUne8",
               "author" : "EXODIST",
               "name" : "eq_set.t",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "BHo7ZLL4rxhgswqAmP1A6QAUne8",
            "_score" : 12.168536,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_id" : "d1CpdCAI4i7i_65of30YMIZ8bXc",
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "size" : 122,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "sloc" : 2,
               "directory" : false,
               "path" : "t/thread_taint.t",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "d1CpdCAI4i7i_65of30YMIZ8bXc",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "thread_taint.t",
               "author" : "EXODIST"
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.168536
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536,
            "_id" : "Objx3eESBu_g46vZdmnPD_xlyHo",
            "_source" : {
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 290,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "sloc" : 12,
               "directory" : false,
               "path" : "t/filehandles.t",
               "id" : "Objx3eESBu_g46vZdmnPD_xlyHo",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "filehandles.t",
               "author" : "EXODIST",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0
            }
         },
         {
            "_id" : "UfLi3ZI4wcsODoyBHWzS6SY0by4",
            "_source" : {
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 574,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/fork.t",
               "sloc" : 25,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "UfLi3ZI4wcsODoyBHWzS6SY0by4",
               "author" : "EXODIST",
               "name" : "fork.t",
               "release" : "Test-Simple-1.001007"
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536
         },
         {
            "_id" : "yLS_ZEYOkqGk9biBO_Y3ePiVqac",
            "_source" : {
               "id" : "yLS_ZEYOkqGk9biBO_Y3ePiVqac",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "plan_shouldnt_import.t",
               "author" : "EXODIST",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "maturity" : "released",
               "stat" : {
                  "size" : 294,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "sloc" : 9,
               "directory" : false,
               "path" : "t/plan_shouldnt_import.t"
            },
            "_score" : 12.168536,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_source" : {
               "name" : "diag.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "pbfxLSqBBzcfaOtIACzHz3md2hM",
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "binary" : false,
               "sloc" : 46,
               "path" : "t/diag.t",
               "directory" : false,
               "stat" : {
                  "uid" : 1009,
                  "size" : 1437,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released"
            },
            "_id" : "pbfxLSqBBzcfaOtIACzHz3md2hM",
            "_score" : 12.168536,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_score" : 12.168536,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "ZDcduhYZzI_oS9EOjQU_H0OH6oc",
            "_source" : {
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "path" : "t/skipall.t",
               "directory" : false,
               "sloc" : 25,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 481,
                  "mtime" : 1413416121
               },
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "skipall.t",
               "id" : "ZDcduhYZzI_oS9EOjQU_H0OH6oc",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : []
            }
         },
         {
            "_source" : {
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "hXcMBNSKok5s7mLFCZT_Z2Re4O8",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "die.t",
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 531,
                  "uid" : 1009
               },
               "path" : "t/subtest/die.t",
               "directory" : false,
               "sloc" : 18,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true
            },
            "_id" : "hXcMBNSKok5s7mLFCZT_Z2Re4O8",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536
         },
         {
            "_source" : {
               "id" : "ZFMA_r1Z2t_c0eCbTGmppcFKx28",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "threads.t",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 469,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "path" : "t/subtest/threads.t",
               "directory" : false,
               "sloc" : 18
            },
            "_id" : "ZFMA_r1Z2t_c0eCbTGmppcFKx28",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536,
            "_id" : "UdsrTrQ6hbydF_RG5MXYMlHlqm0",
            "_source" : {
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 5426,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "path" : "t/subtest/todo.t",
               "directory" : false,
               "sloc" : 131,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "UdsrTrQ6hbydF_RG5MXYMlHlqm0",
               "author" : "EXODIST",
               "name" : "todo.t",
               "release" : "Test-Simple-1.001007"
            }
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.168536,
            "_source" : {
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "mxo8rp7CTGv5_RMRLriJ0hrTlvE",
               "name" : "singleton.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 712,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "sloc" : 30,
               "directory" : false,
               "path" : "t/subtest/singleton.t"
            },
            "_id" : "mxo8rp7CTGv5_RMRLriJ0hrTlvE"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536,
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 274,
                  "mtime" : 1413416121
               },
               "sloc" : 8,
               "path" : "t/subtest/do.t",
               "directory" : false,
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "H_GDuZuGWCaqZ2groIr9AZttbHg",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "do.t",
               "author" : "EXODIST"
            },
            "_id" : "H_GDuZuGWCaqZ2groIr9AZttbHg"
         },
         {
            "_id" : "1OzlOJmWFPEBgVFGXQEg5_PsdpQ",
            "_source" : {
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false,
               "sloc" : 57,
               "path" : "t/subtest/exceptions.t",
               "directory" : false,
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 1857,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "name" : "exceptions.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "1OzlOJmWFPEBgVFGXQEg5_PsdpQ",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007
            },
            "_score" : 12.168536,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.168536,
            "_source" : {
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 225
               },
               "maturity" : "released",
               "path" : "t/Tester/tbt_03die.t",
               "directory" : false,
               "sloc" : 8,
               "binary" : false,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "9faqdYAx720yEqHVncoik8PKRS0",
               "author" : "EXODIST",
               "name" : "tbt_03die.t",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "9faqdYAx720yEqHVncoik8PKRS0"
         },
         {
            "_score" : 12.168536,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "qmYCUjTqA3OrSQRptT_fe6tLGKY",
            "_source" : {
               "stat" : {
                  "mtime" : 1413943292,
                  "size" : 4096,
                  "uid" : 1009,
                  "mode" : 16877,
                  "gid" : 1009
               },
               "maturity" : "released",
               "sloc" : 0,
               "directory" : true,
               "path" : "t/Builder",
               "binary" : true,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/plain",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "qmYCUjTqA3OrSQRptT_fe6tLGKY",
               "name" : "Builder",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007"
            }
         },
         {
            "_score" : 12.168536,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "lAUGWj7GHZyZsYcBm0JrUvmEHyU",
            "_source" : {
               "sloc" : 28,
               "directory" : false,
               "path" : "t/Builder/create.t",
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 818,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false,
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "release" : "Test-Simple-1.001007",
               "name" : "create.t",
               "author" : "EXODIST",
               "id" : "lAUGWj7GHZyZsYcBm0JrUvmEHyU",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54"
            }
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536,
            "_id" : "nLY_OBAl7TQuhT4qOcp6Igw03Qw",
            "_source" : {
               "directory" : false,
               "path" : "t/Builder/done_testing_plan_mismatch.t",
               "sloc" : 31,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 787,
                  "mtime" : 1413416121
               },
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "done_testing_plan_mismatch.t",
               "id" : "nLY_OBAl7TQuhT4qOcp6Igw03Qw",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54"
            }
         },
         {
            "_score" : 12.168536,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "NCkFk6LTEqVJxtqtZMhWvbi9xXE",
            "_source" : {
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false,
               "sloc" : 23,
               "path" : "t/Builder/carp.t",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 587,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "release" : "Test-Simple-1.001007",
               "name" : "carp.t",
               "author" : "EXODIST",
               "id" : "NCkFk6LTEqVJxtqtZMhWvbi9xXE",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple"
            }
         },
         {
            "_source" : {
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "binary" : false,
               "directory" : false,
               "path" : "t/Builder/no_diag.t",
               "sloc" : 4,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 148,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "no_diag.t",
               "id" : "Lj_e4_j9ZKp_KKUSFdgZS33B_KE",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple"
            },
            "_id" : "Lj_e4_j9ZKp_KKUSFdgZS33B_KE",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536
         },
         {
            "_score" : 12.168536,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 747,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/Builder/try.t",
               "sloc" : 28,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "Xl_j7P_Tfx1S2p71_0xHQjHP8_I",
               "author" : "EXODIST",
               "name" : "try.t",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "Xl_j7P_Tfx1S2p71_0xHQjHP8_I"
         },
         {
            "_id" : "hhuq9HGqW7rm4cxWkMNOyzm1vIY",
            "_source" : {
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "hhuq9HGqW7rm4cxWkMNOyzm1vIY",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "SigDie.pm",
               "author" : "EXODIST",
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 79,
                  "mtime" : 1408303882
               },
               "sloc" : 5,
               "directory" : false,
               "path" : "t/lib/SigDie.pm",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl-module",
               "level" : 2
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536
         },
         {
            "_id" : "quYft_tbsI8EI_Op1wLbIOob_Ko",
            "_source" : {
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "quYft_tbsI8EI_Op1wLbIOob_Ko",
               "author" : "EXODIST",
               "name" : "Dummy.pm",
               "release" : "Test-Simple-1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "level" : 2,
               "mime" : "text/x-script.perl-module",
               "authorized" : true,
               "stat" : {
                  "size" : 55,
                  "uid" : 1009,
                  "mtime" : 1408303882,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "path" : "t/lib/Dummy.pm",
               "directory" : false,
               "sloc" : 4
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536
         },
         {
            "_id" : "_9yEdPCKSOYVkDucRTCnzLXOI9w",
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1408116417,
                  "size" : 178,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/too_few_fail.plx",
               "sloc" : 0,
               "binary" : false,
               "mime" : "text/plain",
               "level" : 5,
               "authorized" : true,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "_9yEdPCKSOYVkDucRTCnzLXOI9w",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "too_few_fail.plx"
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536,
            "_id" : "N2inn0Pv_fhbzHUb49p7KjB8Cyc",
            "_source" : {
               "binary" : true,
               "authorized" : true,
               "level" : 0,
               "mime" : "text/plain",
               "stat" : {
                  "size" : 4096,
                  "uid" : 1009,
                  "mtime" : 1413943292,
                  "gid" : 1009,
                  "mode" : 16877
               },
               "maturity" : "released",
               "sloc" : 0,
               "path" : "examples",
               "directory" : true,
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "id" : "N2inn0Pv_fhbzHUb49p7KjB8Cyc",
               "name" : "examples",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : ""
            }
         },
         {
            "_score" : 12.168536,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 3,
               "binary" : true,
               "sloc" : 0,
               "directory" : true,
               "path" : "lib/Test/Builder/IO",
               "stat" : {
                  "size" : 4096,
                  "uid" : 1009,
                  "mtime" : 1413943292,
                  "gid" : 1009,
                  "mode" : 16877
               },
               "maturity" : "released",
               "name" : "IO",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "id" : "hUvZ89tIOqoVjZ9NMiCXEuyYZ4c",
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007
            },
            "_id" : "hUvZ89tIOqoVjZ9NMiCXEuyYZ4c"
         },
         {
            "_score" : 12.168536,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "authorized" : true,
               "level" : 4,
               "mime" : "text/x-script.perl-module",
               "binary" : false,
               "sloc" : 8,
               "directory" : false,
               "path" : "lib/Test/Builder/Tester/Color.pm",
               "description" : "Importing this module causes the subroutine color in Test::Builder::Tester to be called with a true value causing colour highlighting to be turned on in debug output. The sole purpose of this module is to enable colour highlighting from the command line.",
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416218,
                  "size" : 969,
                  "uid" : 1009
               },
               "release" : "Test-Simple-1.001007",
               "name" : "Color.pm",
               "author" : "EXODIST",
               "abstract" : "turn on colour in Test::Builder::Tester",
               "id" : "gFEQ_EF9YTAoIrbUskN539neIj4",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "module" : [
                  {
                     "authorized" : true,
                     "name" : "Test::Builder::Tester::Color",
                     "version_numified" : 1.24,
                     "version" : "1.24",
                     "indexed" : true,
                     "associated_pod" : "EXODIST/Test-Simple-1.001007/lib/Test/Builder/Tester/Color.pm"
                  }
               ],
               "pod" : "NAME Test::Builder::Tester::Color - turn on colour in Test::Builder::Tester SYNOPSIS When running a test script perl -MTest::Builder::Tester::Color test.t DESCRIPTION Importing this module causes the subroutine color in Test::Builder::Tester to be called with a true value causing colour highlighting to be turned on in debug output. The sole purpose of this module is to enable colour highlighting from the command line. AUTHOR Copyright Mark Fowler <mark@twoshortplanks.com> 2002. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself. BUGS This module will have no effect unless Term::ANSIColor is installed. SEE ALSO Test::Builder::Tester, Term::ANSIColor ",
               "slop" : 21,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "documentation" : "Test::Builder::Tester::Color",
               "pod_lines" : [
                  [
                     8,
                     20
                  ],
                  [
                     33,
                     16
                  ]
               ],
               "distribution" : "Test-Simple"
            },
            "_id" : "gFEQ_EF9YTAoIrbUskN539neIj4"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.168536,
            "_id" : "TVKfq4BTCU5hxRntaeSqvNTCMrY",
            "_source" : {
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "author" : "EXODIST",
               "name" : "Test-Simple-1.001007",
               "release" : "Test-Simple-1.001007",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "id" : "TVKfq4BTCU5hxRntaeSqvNTCMrY",
               "directory" : true,
               "path" : "",
               "sloc" : 0,
               "stat" : {
                  "mtime" : 1413943292,
                  "size" : 4096,
                  "uid" : 1009,
                  "mode" : 16877,
                  "gid" : 1009
               },
               "maturity" : "released",
               "level" : -1,
               "mime" : "text/plain",
               "authorized" : true,
               "binary" : true
            }
         },
         {
            "_score" : 12.168536,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "49JNIjXa3a71WUxFGyXYyYIysTw",
            "_source" : {
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "49JNIjXa3a71WUxFGyXYyYIysTw",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "META.yml",
               "author" : "EXODIST",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416247,
                  "uid" : 1009,
                  "size" : 828,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 0,
               "directory" : false,
               "path" : "META.yml",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/yaml",
               "level" : 0
            }
         },
         {
            "_score" : 12.168536,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "name" : "Makefile.PL",
               "author" : "EXODIST",
               "id" : "vSn7adMBtjx3fDgDmPR_cHcj6ps",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "pod" : "",
               "slop" : 0,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 0,
               "binary" : false,
               "sloc" : 104,
               "path" : "Makefile.PL",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 3641,
                  "mtime" : 1413416121
               }
            },
            "_id" : "vSn7adMBtjx3fDgDmPR_cHcj6ps"
         },
         {
            "_source" : {
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 660,
                  "uid" : 1009
               },
               "maturity" : "released",
               "sloc" : 29,
               "directory" : false,
               "path" : "t/bail_out.t",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "VJur_Bf7qJT9f8Zpp_TA7SyWKxE",
               "name" : "bail_out.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : ""
            },
            "_id" : "VJur_Bf7qJT9f8Zpp_TA7SyWKxE",
            "_score" : 12.168536,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 12.168536,
            "_id" : "KEj1of410kzQw_hCZbL__EQv6e8",
            "_source" : {
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "binary" : false,
               "sloc" : 27,
               "path" : "t/fail_one.t",
               "directory" : false,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 697,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "name" : "fail_one.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "KEj1of410kzQw_hCZbL__EQv6e8",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007
            }
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 12.168536,
            "_id" : "HCBb83_7v95fSyQKFv1oKwW_Ntw",
            "_source" : {
               "path" : "t/utf8.t",
               "directory" : false,
               "sloc" : 50,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 1281,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "utf8.t",
               "id" : "HCBb83_7v95fSyQKFv1oKwW_Ntw",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false
            }
         },
         {
            "_source" : {
               "id" : "IQrRNTQyNYeQGikuk90anjBNioo",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : ".perltidyrc",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "level" : 0,
               "mime" : "text/plain",
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1406905176,
                  "uid" : 1009,
                  "size" : 708
               },
               "path" : ".perltidyrc",
               "directory" : false,
               "sloc" : 0
            },
            "_id" : "IQrRNTQyNYeQGikuk90anjBNioo",
            "_score" : 11.970441,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441,
            "_source" : {
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "id" : "a24InRnB_PDcSkqUuX4Jfo_i0Ug",
               "author" : "EXODIST",
               "name" : "MANIFEST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "level" : 0,
               "mime" : "",
               "authorized" : true,
               "stat" : {
                  "size" : 3533,
                  "uid" : 1009,
                  "mtime" : 1413416247,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "MANIFEST",
               "sloc" : 158
            },
            "_id" : "a24InRnB_PDcSkqUuX4Jfo_i0Ug"
         },
         {
            "_score" : 11.970441,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "rVIY8rc4X104y4wX_7IhCTjFKzA",
            "_source" : {
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "directory" : false,
               "path" : "t/import.t",
               "sloc" : 9,
               "stat" : {
                  "uid" : 1009,
                  "size" : 244,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "author" : "EXODIST",
               "name" : "import.t",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "rVIY8rc4X104y4wX_7IhCTjFKzA",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan"
            }
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_id" : "mkW_F2KB8YTTxnv5sQlyBBQmUms",
            "_source" : {
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "author" : "EXODIST",
               "name" : "new_ok.t",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "mkW_F2KB8YTTxnv5sQlyBBQmUms",
               "directory" : false,
               "path" : "t/new_ok.t",
               "sloc" : 29,
               "stat" : {
                  "size" : 705,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false
            }
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441,
            "_source" : {
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "name" : "no_plan.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "4_rt87m0MZN1lw8Wz7NI0r_MH2o",
               "sloc" : 22,
               "path" : "t/no_plan.t",
               "directory" : false,
               "stat" : {
                  "size" : 664,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "binary" : false
            },
            "_id" : "4_rt87m0MZN1lw8Wz7NI0r_MH2o"
         },
         {
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "name" : "00compile.t",
               "author" : "EXODIST",
               "id" : "_Pdwpo5QUOut85Vf2PuvLct_blg",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "binary" : false,
               "sloc" : 33,
               "directory" : false,
               "path" : "t/00compile.t",
               "maturity" : "released",
               "stat" : {
                  "uid" : 1009,
                  "size" : 982,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               }
            },
            "_id" : "_Pdwpo5QUOut85Vf2PuvLct_blg",
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_source" : {
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "uxbRRsQFicWfVSuCY45ws88wT8k",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "BEGIN_use_ok.t",
               "author" : "EXODIST",
               "maturity" : "released",
               "stat" : {
                  "size" : 388,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "sloc" : 16,
               "path" : "t/BEGIN_use_ok.t",
               "directory" : false,
               "binary" : false,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl"
            },
            "_id" : "uxbRRsQFicWfVSuCY45ws88wT8k"
         },
         {
            "_source" : {
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "NIVXar7g0STSxDF5ET_nNfvXtwo",
               "name" : "missing.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 1059,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "sloc" : 34,
               "path" : "t/missing.t",
               "directory" : false,
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1
            },
            "_id" : "NIVXar7g0STSxDF5ET_nNfvXtwo",
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441
         },
         {
            "_id" : "OBZPTDi5ew_F8mOQr_a7s1ZpEoQ",
            "_source" : {
               "binary" : false,
               "authorized" : true,
               "level" : 5,
               "mime" : "text/plain",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1408116417,
                  "size" : 171,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 0,
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/too_few.plx",
               "id" : "OBZPTDi5ew_F8mOQr_a7s1ZpEoQ",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "too_few.plx",
               "author" : "EXODIST",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441
         },
         {
            "_score" : 11.970441,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "TN_TW4q5SbGa3qj_K3x_pvVwjyw",
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "size" : 189,
                  "uid" : 1009,
                  "mtime" : 1408116417,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "path" : "t/lib/Test/Simple/sample_tests/five_fail.plx",
               "directory" : false,
               "sloc" : 0,
               "binary" : false,
               "mime" : "text/plain",
               "level" : 5,
               "authorized" : true,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "TN_TW4q5SbGa3qj_K3x_pvVwjyw",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "five_fail.plx"
            }
         },
         {
            "_id" : "cihRSOXKcTWm7jyNLOAu9dDJuSY",
            "_source" : {
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "cihRSOXKcTWm7jyNLOAu9dDJuSY",
               "name" : "last_minute_death.plx",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "stat" : {
                  "size" : 268,
                  "uid" : 1009,
                  "mtime" : 1408116417,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "sloc" : 0,
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/last_minute_death.plx",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 5
            },
            "_score" : 11.970441,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_source" : {
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/one_fail_without_plan.plx",
               "sloc" : 0,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1408116417,
                  "size" : 152,
                  "uid" : 1009
               },
               "level" : 5,
               "mime" : "text/plain",
               "authorized" : true,
               "binary" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "one_fail_without_plan.plx",
               "id" : "i8h6_zwjo65yq1GWFGHNGrdVhUE",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false
            },
            "_id" : "i8h6_zwjo65yq1GWFGHNGrdVhUE"
         },
         {
            "_source" : {
               "id" : "i8QwXXW6Ej2aw9Itc0iMnf2suqY",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "Dev",
               "author" : "EXODIST",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "binary" : true,
               "authorized" : true,
               "level" : 2,
               "mime" : "text/plain",
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 16877,
                  "size" : 4096,
                  "uid" : 1009,
                  "mtime" : 1413943292
               },
               "sloc" : 0,
               "path" : "t/lib/Dev",
               "directory" : true
            },
            "_id" : "i8QwXXW6Ej2aw9Itc0iMnf2suqY",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441
         },
         {
            "_score" : 11.970441,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "uxloGkNdZGY_0YO6_CWr41uqjBo",
            "_source" : {
               "sloc" : 0,
               "directory" : true,
               "path" : "lib/Test",
               "stat" : {
                  "size" : 4096,
                  "uid" : 1009,
                  "mtime" : 1413943292,
                  "gid" : 1009,
                  "mode" : 16877
               },
               "maturity" : "released",
               "authorized" : true,
               "level" : 1,
               "mime" : "text/plain",
               "binary" : true,
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "name" : "Test",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "id" : "uxloGkNdZGY_0YO6_CWr41uqjBo"
            }
         },
         {
            "_source" : {
               "id" : "v5x8CaJgDoReHEF_2JqIuMIaius",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "pod.t",
               "author" : "EXODIST",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "maturity" : "released",
               "stat" : {
                  "uid" : 1009,
                  "size" : 149,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "sloc" : 4,
               "directory" : false,
               "path" : "t/pod.t"
            },
            "_id" : "v5x8CaJgDoReHEF_2JqIuMIaius",
            "_score" : 11.970441,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_id" : "Q7OJqN_HNilCtcRvDEgpJiuXcsE",
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "release" : "Test-Simple-1.001007",
               "name" : "explain.t",
               "author" : "EXODIST",
               "id" : "Q7OJqN_HNilCtcRvDEgpJiuXcsE",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "sloc" : 17,
               "path" : "t/explain.t",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 582,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "binary" : false
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441
         },
         {
            "_id" : "r_yrA97_uZG8Yn8TWPZW25s5Tls",
            "_source" : {
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "r_yrA97_uZG8Yn8TWPZW25s5Tls",
               "author" : "EXODIST",
               "name" : "skip.t",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 1945,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/skip.t",
               "sloc" : 65
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441,
            "_source" : {
               "directory" : false,
               "path" : "t/plan_is_noplan.t",
               "sloc" : 22,
               "maturity" : "released",
               "stat" : {
                  "size" : 404,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "plan_is_noplan.t",
               "id" : "IKwjUY67XNwUqgjICTL02SBHONU",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false
            },
            "_id" : "IKwjUY67XNwUqgjICTL02SBHONU"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441,
            "_id" : "UyADJhfbTAM_SZ3qTRtpuGuOVT0",
            "_source" : {
               "binary" : false,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "stat" : {
                  "size" : 365,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "path" : "t/useing.t",
               "directory" : false,
               "sloc" : 16,
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "UyADJhfbTAM_SZ3qTRtpuGuOVT0",
               "author" : "EXODIST",
               "name" : "useing.t",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : ""
            }
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_source" : {
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "size" : 11532,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "directory" : false,
               "path" : "t/is_deeply_fail.t",
               "sloc" : 208,
               "id" : "e811awT3P_61l42PdRGD40mwZmI",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "is_deeply_fail.t",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0
            },
            "_id" : "e811awT3P_61l42PdRGD40mwZmI"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_source" : {
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "n1UzZA90CUcIA9DyFGym8nWDySA",
               "author" : "EXODIST",
               "name" : "dont_overwrite_die_handler.t",
               "release" : "Test-Simple-1.001007",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 426,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "path" : "t/dont_overwrite_die_handler.t",
               "directory" : false,
               "sloc" : 14,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true
            },
            "_id" : "n1UzZA90CUcIA9DyFGym8nWDySA"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "name" : "c_flag.t",
               "author" : "EXODIST",
               "id" : "YZeMeUVmOFVy_P4jjMvZjZtMmjk",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "binary" : false,
               "sloc" : 10,
               "path" : "t/c_flag.t",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 417,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               }
            },
            "_id" : "YZeMeUVmOFVy_P4jjMvZjZtMmjk"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_id" : "mxKpLEW03IglObzDWxxp0iTStus",
            "_source" : {
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 416,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "path" : "t/note.t",
               "directory" : false,
               "sloc" : 20,
               "id" : "mxKpLEW03IglObzDWxxp0iTStus",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "note.t",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0
            }
         },
         {
            "_score" : 11.970441,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "DMGRpEIXHbqLLrnl2HMLg_SuLe0",
            "_source" : {
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 200,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "sloc" : 12,
               "path" : "t/simple.t",
               "directory" : false,
               "binary" : false,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "DMGRpEIXHbqLLrnl2HMLg_SuLe0",
               "name" : "simple.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007"
            }
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441,
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "release" : "Test-Simple-1.001007",
               "name" : "use_ok.t",
               "author" : "EXODIST",
               "id" : "s4NvSAwEiw_MZ_ea31uSJQ0P1qM",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "sloc" : 73,
               "path" : "t/use_ok.t",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 2345,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "binary" : false
            },
            "_id" : "s4NvSAwEiw_MZ_ea31uSJQ0P1qM"
         },
         {
            "_score" : 11.970441,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "rFTH0O8LGakGRj52Vo5vYfkQPPc",
            "_source" : {
               "binary" : true,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/plain",
               "stat" : {
                  "mode" : 16877,
                  "gid" : 1009,
                  "mtime" : 1413943292,
                  "uid" : 1009,
                  "size" : 4096
               },
               "maturity" : "released",
               "sloc" : 0,
               "directory" : true,
               "path" : "t/subtest",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "rFTH0O8LGakGRj52Vo5vYfkQPPc",
               "name" : "subtest",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : ""
            }
         },
         {
            "_source" : {
               "author" : "EXODIST",
               "name" : "bail_out.t",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "wVxqdJfbSTrsH2hWA2zbXD7pp8w",
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "directory" : false,
               "path" : "t/subtest/bail_out.t",
               "sloc" : 46,
               "stat" : {
                  "uid" : 1009,
                  "size" : 951,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released"
            },
            "_id" : "wVxqdJfbSTrsH2hWA2zbXD7pp8w",
            "_score" : 11.970441,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441,
            "_source" : {
               "sloc" : 108,
               "directory" : false,
               "path" : "t/subtest/line_numbers.t",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 3878,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "name" : "line_numbers.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "5RGWfVaUD6HWgF6J2PC_GDDLgeM"
            },
            "_id" : "5RGWfVaUD6HWgF6J2PC_GDDLgeM"
         },
         {
            "_score" : 11.970441,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 1245
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/subtest/fork.t",
               "sloc" : 39,
               "binary" : false,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "dj7AADm1MbLY9Buz2j_iQC15zMk",
               "author" : "EXODIST",
               "name" : "fork.t",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "dj7AADm1MbLY9Buz2j_iQC15zMk"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_source" : {
               "stat" : {
                  "uid" : 1009,
                  "size" : 5193,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "sloc" : 183,
               "directory" : false,
               "path" : "t/subtest/basic.t",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "W0VxLgQHyPej_4C6cST4iO8OpUg",
               "name" : "basic.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "W0VxLgQHyPej_4C6cST4iO8OpUg"
         },
         {
            "_source" : {
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 1274,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "sloc" : 43,
               "path" : "t/Tester/tbt_01basic.t",
               "directory" : false,
               "id" : "T8ci9lzbqVaFVRHDDegHxmlSfNQ",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "tbt_01basic.t",
               "author" : "EXODIST",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0
            },
            "_id" : "T8ci9lzbqVaFVRHDDegHxmlSfNQ",
            "_score" : 11.970441,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 1201,
                  "uid" : 1009
               },
               "sloc" : 35,
               "path" : "t/Tester/tbt_02fhrestore.t",
               "directory" : false,
               "binary" : false,
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "FnrM1FTySfRvlUmH2Df5dGhF79E",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "tbt_02fhrestore.t",
               "author" : "EXODIST"
            },
            "_id" : "FnrM1FTySfRvlUmH2Df5dGhF79E",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441
         },
         {
            "_id" : "5HEUU52yvrVs04cXoF38upjMKjU",
            "_source" : {
               "path" : "t/Tester/tbt_06errormess.t",
               "directory" : false,
               "sloc" : 66,
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 3098
               },
               "maturity" : "released",
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "author" : "EXODIST",
               "name" : "tbt_06errormess.t",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "5HEUU52yvrVs04cXoF38upjMKjU"
            },
            "_score" : 11.970441,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "hjUTX77V_nJkdaWZLQ7qBLIkdj4",
            "_source" : {
               "author" : "EXODIST",
               "name" : "current_test.t",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "hjUTX77V_nJkdaWZLQ7qBLIkdj4",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "path" : "t/Builder/current_test.t",
               "directory" : false,
               "sloc" : 6,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 259,
                  "mtime" : 1413416121
               },
               "maturity" : "released"
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441
         },
         {
            "_id" : "6dcy1Zr0y8uJq2Aj_HkA_85tdVg",
            "_source" : {
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "path" : "t/Builder/no_plan_at_all.t",
               "directory" : false,
               "sloc" : 26,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 722,
                  "uid" : 1009
               },
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "no_plan_at_all.t",
               "id" : "6dcy1Zr0y8uJq2Aj_HkA_85tdVg",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : []
            },
            "_score" : 11.970441,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_source" : {
               "mime" : "text/plain",
               "level" : 1,
               "authorized" : true,
               "binary" : true,
               "path" : "t/xt",
               "directory" : true,
               "sloc" : 0,
               "stat" : {
                  "mode" : 16877,
                  "gid" : 1009,
                  "mtime" : 1413943292,
                  "uid" : 1009,
                  "size" : 4096
               },
               "maturity" : "released",
               "author" : "EXODIST",
               "name" : "xt",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "TqOUGN9xPolsykbJxEoh78RaNm4",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007"
            },
            "_id" : "TqOUGN9xPolsykbJxEoh78RaNm4"
         },
         {
            "_id" : "ptajqJZw2UlCiX2aygdLNjKSAig",
            "_source" : {
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "name" : "dependents.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "ptajqJZw2UlCiX2aygdLNjKSAig",
               "sloc" : 35,
               "path" : "t/xt/dependents.t",
               "directory" : false,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 1157,
                  "uid" : 1009,
                  "mtime" : 1408303882
               },
               "maturity" : "released",
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441
         },
         {
            "_id" : "i_C76zHLviLmOGxw1bPCytua_Qo",
            "_source" : {
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "i_C76zHLviLmOGxw1bPCytua_Qo",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "load.t",
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 180
               },
               "directory" : false,
               "path" : "t/Simple/load.t",
               "sloc" : 7,
               "binary" : false,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.970441
         },
         {
            "_id" : "Sxu_1XidsOZqbzEaKmxQqt_la5I",
            "_source" : {
               "distribution" : "Test-Simple",
               "pod_lines" : [
                  [
                     9,
                     39
                  ]
               ],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "documentation" : "Test::Builder::NoOutput",
               "slop" : 24,
               "pod" : "NAME Test::Builder::NoOutput - A subclass of Test::Builder which prints nothing SYNOPSIS use Test::Builder::NoOutput; my $tb = Test::Builder::NoOutput->new; ...test as normal... my $output = $tb->read; DESCRIPTION This is a subclass of Test::Builder which traps all its output. It is mostly useful for testing Test::Builder. read my $all_output = $tb->read; my $output = $tb->read($stream); Returns all the output (including failure and todo output) collected so far. It is destructive, each call to read clears the output buffer. If $stream is given it will return just the output from that stream. $stream's are... out output() err failure_output() todo todo_output() all all outputs Defaults to 'all'. ",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "Sxu_1XidsOZqbzEaKmxQqt_la5I",
               "abstract" : "A subclass of Test::Builder which prints nothing",
               "name" : "NoOutput.pm",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "stat" : {
                  "uid" : 1009,
                  "size" : 2408,
                  "mtime" : 1410583645,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "sloc" : 57,
               "directory" : false,
               "description" : "This is a subclass of Test::Builder which traps all its output. It is mostly useful for testing Test::Builder. read my $all_output = $tb->read; my $output = $tb->read($stream); Returns all the output (including failure and todo output) collected so far. It is destructive, each call to read clears the output buffer. If $stream is given it will return just the output from that stream. $stream's are... out output() err failure_output() todo todo_output() all all outputs Defaults to 'all'.",
               "path" : "t/lib/Test/Builder/NoOutput.pm",
               "binary" : false,
               "authorized" : true,
               "level" : 4,
               "mime" : "text/x-script.perl-module"
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.970441,
            "_id" : "51aj1DGpatngVaYdoeR_NxQoqoQ",
            "_source" : {
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl-module",
               "level" : 4,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1408303882,
                  "size" : 373,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 14,
               "path" : "t/lib/Test/Simple/Catch.pm",
               "directory" : false,
               "id" : "51aj1DGpatngVaYdoeR_NxQoqoQ",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "Catch.pm",
               "author" : "EXODIST",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0
            }
         },
         {
            "_source" : {
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "eToUgXQfAXfSvxkvXnFtPAaE9hk",
               "author" : "EXODIST",
               "name" : "done_testing_double.t",
               "release" : "Test-Simple-1.001007",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 912,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/Builder/done_testing_double.t",
               "sloc" : 33,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true
            },
            "_id" : "eToUgXQfAXfSvxkvXnFtPAaE9hk",
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_id" : "ggpKC2igIgOB_IgdFwpBpyOpM_8",
            "_source" : {
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "ggpKC2igIgOB_IgdFwpBpyOpM_8",
               "name" : "done_testing.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "stat" : {
                  "uid" : 1009,
                  "size" : 235,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "sloc" : 7,
               "path" : "t/Builder/done_testing.t",
               "directory" : false
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212
         },
         {
            "_source" : {
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 1995,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/Builder/output.t",
               "sloc" : 75,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "V2qYeYcDnDHPHCVnv_AheziSivQ",
               "author" : "EXODIST",
               "name" : "output.t",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "V2qYeYcDnDHPHCVnv_AheziSivQ",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212
         },
         {
            "_source" : {
               "author" : "EXODIST",
               "name" : "TieOut.pm",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "Rt1MyOx0bdlMmTGwHZls5S_TYCs",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "mime" : "text/x-script.perl-module",
               "level" : 2,
               "authorized" : true,
               "binary" : false,
               "directory" : false,
               "path" : "t/lib/TieOut.pm",
               "sloc" : 23,
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1408303882,
                  "uid" : 1009,
                  "size" : 372
               },
               "maturity" : "released"
            },
            "_id" : "Rt1MyOx0bdlMmTGwHZls5S_TYCs",
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212
         },
         {
            "_id" : "eHHQJGqsewfJWZxMW_S8D4zZV7E",
            "_source" : {
               "level" : 3,
               "mime" : "text/plain",
               "authorized" : true,
               "binary" : true,
               "directory" : true,
               "path" : "t/lib/Test/Builder",
               "sloc" : 0,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 16877,
                  "uid" : 1009,
                  "size" : 4096,
                  "mtime" : 1413943292
               },
               "maturity" : "released",
               "author" : "EXODIST",
               "name" : "Builder",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "eHHQJGqsewfJWZxMW_S8D4zZV7E",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007"
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212
         },
         {
            "_source" : {
               "sloc" : 0,
               "path" : "t/lib/Test/Simple",
               "directory" : true,
               "stat" : {
                  "uid" : 1009,
                  "size" : 4096,
                  "mtime" : 1413943292,
                  "gid" : 1009,
                  "mode" : 16877
               },
               "maturity" : "released",
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 3,
               "binary" : true,
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "name" : "Simple",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "dXEd4m3J76YaFqfEG_lXxLGyNXM"
            },
            "_id" : "dXEd4m3J76YaFqfEG_lXxLGyNXM",
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212,
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413943292,
                  "size" : 4096,
                  "uid" : 1009,
                  "mode" : 16877,
                  "gid" : 1009
               },
               "directory" : true,
               "path" : "t/lib/Test/Simple/sample_tests",
               "sloc" : 0,
               "binary" : true,
               "mime" : "text/plain",
               "level" : 4,
               "authorized" : true,
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "OJAjDBWNSn3BwUgtHSE3hUtwioM",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "sample_tests"
            },
            "_id" : "OJAjDBWNSn3BwUgtHSE3hUtwioM"
         },
         {
            "_id" : "Ds86aBSL4CNQjamsNM8tbIKRz_s",
            "_source" : {
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "Ds86aBSL4CNQjamsNM8tbIKRz_s",
               "author" : "EXODIST",
               "name" : "two_fail.plx",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "mime" : "text/plain",
               "level" : 5,
               "authorized" : true,
               "stat" : {
                  "mtime" : 1408116417,
                  "size" : 192,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/two_fail.plx",
               "sloc" : 0
            },
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "OXA3C4sev9syXJmtIaITe2ZCGXk",
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "name" : "death_in_eval.plx",
               "author" : "EXODIST",
               "id" : "OXA3C4sev9syXJmtIaITe2ZCGXk",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "authorized" : true,
               "level" : 5,
               "mime" : "text/plain",
               "binary" : false,
               "sloc" : 0,
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/death_in_eval.plx",
               "maturity" : "released",
               "stat" : {
                  "size" : 280,
                  "uid" : 1009,
                  "mtime" : 1408116417,
                  "gid" : 1009,
                  "mode" : 33188
               }
            }
         },
         {
            "_source" : {
               "stat" : {
                  "mtime" : 1408116417,
                  "uid" : 1009,
                  "size" : 32,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "sloc" : 0,
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/exit.plx",
               "binary" : false,
               "authorized" : true,
               "level" : 5,
               "mime" : "text/plain",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "fEZUgHEjk9WOyXL5Kl9rJDjLHaA",
               "name" : "exit.plx",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "fEZUgHEjk9WOyXL5Kl9rJDjLHaA",
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212,
            "_source" : {
               "name" : "success.plx",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "X3Be1d4cOcgelcBVDZBt8YC0SDQ",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "authorized" : true,
               "level" : 5,
               "mime" : "text/plain",
               "binary" : false,
               "sloc" : 0,
               "directory" : false,
               "path" : "t/lib/Test/Simple/sample_tests/success.plx",
               "stat" : {
                  "mtime" : 1408116417,
                  "size" : 223,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released"
            },
            "_id" : "X3Be1d4cOcgelcBVDZBt8YC0SDQ"
         },
         {
            "_id" : "x2CVLWpJsmINWW8y6Mys5bB77FA",
            "_source" : {
               "id" : "x2CVLWpJsmINWW8y6Mys5bB77FA",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "name" : "subtest.t",
               "author" : "EXODIST",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1408303882,
                  "uid" : 1009,
                  "size" : 348
               },
               "sloc" : 15,
               "directory" : false,
               "path" : "examples/subtest.t"
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212,
            "_source" : {
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "id" : "Qu7TOsZ18yJfgtbkDUyL5oMQzGU",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "Builder",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413943292,
                  "size" : 4096,
                  "uid" : 1009,
                  "mode" : 16877,
                  "gid" : 1009
               },
               "directory" : true,
               "path" : "lib/Test/Builder",
               "sloc" : 0,
               "binary" : true,
               "level" : 2,
               "mime" : "text/plain",
               "authorized" : true
            },
            "_id" : "Qu7TOsZ18yJfgtbkDUyL5oMQzGU"
         },
         {
            "_id" : "z7TNi_FXf5R4e_lHp3Aqt6MzrKk",
            "_source" : {
               "sloc" : 548,
               "description" : "STOP! If you're just getting started writing tests, have a look at Test::Simple first. This is a drop in replacement for Test::Simple which you can switch to once you get the hang of basic testing. The purpose of this module is to provide a wide range of testing utilities. Various ways to say \"ok\" with better diagnostics, facilities to skip tests, test future features and compare complicated data structures. While you can do almost anything with a simple \"ok()\" function, it doesn't provide good diagnostic output. I love it when a plan comes together Before anything else, you need a testing plan. This basically declares how many tests your script is going to run to protect against premature failure. The preferred way to do this is to declare a plan when you \"use Test::More\". use Test::More tests => 23; There are cases when you will not know beforehand how many tests your script is going to run. In this case, you can declare your tests at the end. use Test::More; ... run your tests ... done_testing( $number_of_tests_run ); Sometimes you really don't know how many tests were run, or it's too difficult to calculate. In which case you can leave off $number_of_tests_run. In some cases, you'll want to completely skip an entire testing script. use Test::More skip_all => $skip_reason; Your script will declare a skip with the reason why you skipped and exit immediately with a zero (success). See Test::Harness for details. If you want to control what functions Test::More will export, you have to use the 'import' option. For example, to import everything but 'fail', you'd do: use Test::More tests => 23, import => ['!fail']; Alternatively, you can use the \"plan()\" function. Useful for when you have to calculate the number of tests. use Test::More; plan tests => keys %Stuff * 3; or for deciding between running the tests at all: use Test::More; if( $^O eq 'MacOS' ) { plan skip_all => 'Test irrelevant on MacOS'; } else { plan tests => 42; }",
               "path" : "lib/Test/More.pm",
               "directory" : false,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 50915,
                  "mtime" : 1413416218
               },
               "maturity" : "released",
               "authorized" : true,
               "mime" : "text/x-script.perl-module",
               "level" : 2,
               "binary" : false,
               "slop" : 762,
               "module" : [
                  {
                     "version" : "1.001007",
                     "version_numified" : 1.001007,
                     "indexed" : true,
                     "associated_pod" : "EXODIST/Test-Simple-1.001007/lib/Test/More.pm",
                     "authorized" : true,
                     "name" : "Test::More"
                  }
               ],
               "pod" : "NAME Test::More - yet another framework for writing test scripts SYNOPSIS use Test::More tests => 23; # or use Test::More skip_all => $reason; # or use Test::More; # see done_testing() require_ok( 'Some::Module' ); # Various ways to say \"ok\" ok($got eq $expected, $test_name); is ($got, $expected, $test_name); isnt($got, $expected, $test_name); # Rather than print STDERR \"# here's what went wrong\\n\" diag(\"here's what went wrong\"); like ($got, qr/expected/, $test_name); unlike($got, qr/expected/, $test_name); cmp_ok($got, '==', $expected, $test_name); is_deeply($got_complex_structure, $expected_complex_structure, $test_name); SKIP: { skip $why, $how_many unless $have_some_feature; ok( foo(), $test_name ); is( foo(42), 23, $test_name ); }; TODO: { local $TODO = $why; ok( foo(), $test_name ); is( foo(42), 23, $test_name ); }; can_ok($module, @methods); isa_ok($object, $class); pass($test_name); fail($test_name); BAIL_OUT($why); # UNIMPLEMENTED!!! my @status = Test::More::status; DESCRIPTION STOP! If you're just getting started writing tests, have a look at Test::Simple first. This is a drop in replacement for Test::Simple which you can switch to once you get the hang of basic testing. The purpose of this module is to provide a wide range of testing utilities. Various ways to say \"ok\" with better diagnostics, facilities to skip tests, test future features and compare complicated data structures. While you can do almost anything with a simple \"ok()\" function, it doesn't provide good diagnostic output. I love it when a plan comes together Before anything else, you need a testing plan. This basically declares how many tests your script is going to run to protect against premature failure. The preferred way to do this is to declare a plan when you \"use Test::More\". use Test::More tests => 23; There are cases when you will not know beforehand how many tests your script is going to run. In this case, you can declare your tests at the end. use Test::More; ... run your tests ... done_testing( $number_of_tests_run ); Sometimes you really don't know how many tests were run, or it's too difficult to calculate. In which case you can leave off $number_of_tests_run. In some cases, you'll want to completely skip an entire testing script. use Test::More skip_all => $skip_reason; Your script will declare a skip with the reason why you skipped and exit immediately with a zero (success). See Test::Harness for details. If you want to control what functions Test::More will export, you have to use the 'import' option. For example, to import everything but 'fail', you'd do: use Test::More tests => 23, import => ['!fail']; Alternatively, you can use the \"plan()\" function. Useful for when you have to calculate the number of tests. use Test::More; plan tests => keys %Stuff * 3; or for deciding between running the tests at all: use Test::More; if( $^O eq 'MacOS' ) { plan skip_all => 'Test irrelevant on MacOS'; } else { plan tests => 42; } done_testing done_testing(); done_testing($number_of_tests); If you don't know how many tests you're going to run, you can issue the plan when you're done running tests. $number_of_tests is the same as \"plan()\", it's the number of tests you expected to run. You can omit this, in which case the number of tests you ran doesn't matter, just the fact that your tests ran to conclusion. This is safer than and replaces the \"no_plan\" plan. Test names By convention, each test is assigned a number in order. This is largely done automatically for you. However, it's often very useful to assign a name to each test. Which would you rather see: ok 4 not ok 5 ok 6 or ok 4 - basic multi-variable not ok 5 - simple exponential ok 6 - force == mass * acceleration The later gives you some idea of what failed. It also makes it easier to find the test in your script, simply search for \"simple exponential\". All test functions take a name argument. It's optional, but highly suggested that you use it. I'm ok, you're not ok. The basic purpose of this module is to print out either \"ok #\" or \"not ok #\" depending on if a given test succeeded or failed. Everything else is just gravy. All of the following print \"ok\" or \"not ok\" depending on if the test succeeded or failed. They all also return true or false, respectively. ok ok($got eq $expected, $test_name); This simply evaluates any expression (\"$got eq $expected\" is just a simple example) and uses that to determine if the test succeeded or failed. A true expression passes, a false one fails. Very simple. For example: ok( $exp{9} == 81, 'simple exponential' ); ok( Film->can('db_Main'), 'set_db()' ); ok( $p->tests == 4, 'saw tests' ); ok( !grep(!defined $_, @items), 'all items defined' ); (Mnemonic: \"This is ok.\") $test_name is a very short description of the test that will be printed out. It makes it very easy to find a test in your script when it fails and gives others an idea of your intentions. $test_name is optional, but we very strongly encourage its use. Should an \"ok()\" fail, it will produce some diagnostics: not ok 18 - sufficient mucus # Failed test 'sufficient mucus' # in foo.t at line 42. This is the same as Test::Simple's \"ok()\" routine. is isnt is ( $got, $expected, $test_name ); isnt( $got, $expected, $test_name ); Similar to \"ok()\", \"is()\" and \"isnt()\" compare their two arguments with \"eq\" and \"ne\" respectively and use the result of that to determine if the test succeeded or failed. So these: # Is the ultimate answer 42? is( ultimate_answer(), 42, \"Meaning of Life\" ); # $foo isn't empty isnt( $foo, '', \"Got some foo\" ); are similar to these: ok( ultimate_answer() eq 42, \"Meaning of Life\" ); ok( $foo ne '', \"Got some foo\" ); \"undef\" will only ever match \"undef\". So you can test a value against \"undef\" like this: is($not_defined, undef, \"undefined as expected\"); (Mnemonic: \"This is that.\" \"This isn't that.\") So why use these? They produce better diagnostics on failure. \"ok()\" cannot know what you are testing for (beyond the name), but \"is()\" and \"isnt()\" know what the test was and why it failed. For example this test: my $foo = 'waffle'; my $bar = 'yarblokos'; is( $foo, $bar, 'Is foo the same as bar?' ); Will produce something like this: not ok 17 - Is foo the same as bar? # Failed test 'Is foo the same as bar?' # in foo.t at line 139. # got: 'waffle' # expected: 'yarblokos' So you can figure out what went wrong without rerunning the test. You are encouraged to use \"is()\" and \"isnt()\" over \"ok()\" where possible, however do not be tempted to use them to find out if something is true or false! # XXX BAD! is( exists $brooklyn{tree}, 1, 'A tree grows in Brooklyn' ); This does not check if \"exists $brooklyn{tree}\" is true, it checks if it returns 1. Very different. Similar caveats exist for false and 0. In these cases, use \"ok()\". ok( exists $brooklyn{tree}, 'A tree grows in Brooklyn' ); A simple call to \"isnt()\" usually does not provide a strong test but there are cases when you cannot say much more about a value than that it is different from some other value: new_ok $obj, \"Foo\"; my $clone = $obj->clone; isa_ok $obj, \"Foo\", \"Foo->clone\"; isnt $obj, $clone, \"clone() produces a different object\"; For those grammatical pedants out there, there's an \"isn't()\" function which is an alias of \"isnt()\". like like( $got, qr/expected/, $test_name ); Similar to \"ok()\", \"like()\" matches $got against the regex \"qr/expected/\". So this: like($got, qr/expected/, 'this is like that'); is similar to: ok( $got =~ m/expected/, 'this is like that'); (Mnemonic \"This is like that\".) The second argument is a regular expression. It may be given as a regex reference (i.e. \"qr//\") or (for better compatibility with older perls) as a string that looks like a regex (alternative delimiters are currently not supported): like( $got, '/expected/', 'this is like that' ); Regex options may be placed on the end ('/expected/i'). Its advantages over \"ok()\" are similar to that of \"is()\" and \"isnt()\". Better diagnostics on failure. unlike unlike( $got, qr/expected/, $test_name ); Works exactly as \"like()\", only it checks if $got does not match the given pattern. cmp_ok cmp_ok( $got, $op, $expected, $test_name ); Halfway between \"ok()\" and \"is()\" lies \"cmp_ok()\". This allows you to compare two arguments using any binary perl operator. The test passes if the comparison is true and fails otherwise. # ok( $got eq $expected ); cmp_ok( $got, 'eq', $expected, 'this eq that' ); # ok( $got == $expected ); cmp_ok( $got, '==', $expected, 'this == that' ); # ok( $got && $expected ); cmp_ok( $got, '&&', $expected, 'this && that' ); ...etc... Its advantage over \"ok()\" is when the test fails you'll know what $got and $expected were: not ok 1 # Failed test in foo.t at line 12. # '23' # && # undef It's also useful in those cases where you are comparing numbers and \"is()\"'s use of \"eq\" will interfere: cmp_ok( $big_hairy_number, '==', $another_big_hairy_number ); It's especially useful when comparing greater-than or smaller-than relation between values: cmp_ok( $some_value, '<=', $upper_limit ); can_ok can_ok($module, @methods); can_ok($object, @methods); Checks to make sure the $module or $object can do these @methods (works with functions, too). can_ok('Foo', qw(this that whatever)); is almost exactly like saying: ok( Foo->can('this') && Foo->can('that') && Foo->can('whatever') ); only without all the typing and with a better interface. Handy for quickly testing an interface. No matter how many @methods you check, a single \"can_ok()\" call counts as one test. If you desire otherwise, use: foreach my $meth (@methods) { can_ok('Foo', $meth); } isa_ok isa_ok($object, $class, $object_name); isa_ok($subclass, $class, $object_name); isa_ok($ref, $type, $ref_name); Checks to see if the given \"$object->isa($class)\". Also checks to make sure the object was defined in the first place. Handy for this sort of thing: my $obj = Some::Module->new; isa_ok( $obj, 'Some::Module' ); where you'd otherwise have to write my $obj = Some::Module->new; ok( defined $obj && $obj->isa('Some::Module') ); to safeguard against your test script blowing up. You can also test a class, to make sure that it has the right ancestor: isa_ok( 'Vole', 'Rodent' ); It works on references, too: isa_ok( $array_ref, 'ARRAY' ); The diagnostics of this test normally just refer to 'the object'. If you'd like them to be more specific, you can supply an $object_name (for example 'Test customer'). new_ok my $obj = new_ok( $class ); my $obj = new_ok( $class => \\@args ); my $obj = new_ok( $class => \\@args, $object_name ); A convenience function which combines creating an object and calling \"isa_ok()\" on that object. It is basically equivalent to: my $obj = $class->new(@args); isa_ok $obj, $class, $object_name; If @args is not given, an empty list will be used. This function only works on \"new()\" and it assumes \"new()\" will return just a single object which isa $class. subtest subtest $name => \\&code; \"subtest()\" runs the &code as its own little test with its own plan and its own result. The main test counts this as a single test using the result of the whole subtest to determine if its ok or not ok. For example... use Test::More tests => 3; pass(\"First test\"); subtest 'An example subtest' => sub { plan tests => 2; pass(\"This is a subtest\"); pass(\"So is this\"); }; pass(\"Third test\"); This would produce. 1..3 ok 1 - First test # Subtest: An example subtest 1..2 ok 1 - This is a subtest ok 2 - So is this ok 2 - An example subtest ok 3 - Third test A subtest may call \"skip_all\". No tests will be run, but the subtest is considered a skip. subtest 'skippy' => sub { plan skip_all => 'cuz I said so'; pass('this test will never be run'); }; Returns true if the subtest passed, false otherwise. Due to how subtests work, you may omit a plan if you desire. This adds an implicit \"done_testing()\" to the end of your subtest. The following two subtests are equivalent: subtest 'subtest with implicit done_testing()', sub { ok 1, 'subtests with an implicit done testing should work'; ok 1, '... and support more than one test'; ok 1, '... no matter how many tests are run'; }; subtest 'subtest with explicit done_testing()', sub { ok 1, 'subtests with an explicit done testing should work'; ok 1, '... and support more than one test'; ok 1, '... no matter how many tests are run'; done_testing(); }; pass fail pass($test_name); fail($test_name); Sometimes you just want to say that the tests have passed. Usually the case is you've got some complicated condition that is difficult to wedge into an \"ok()\". In this case, you can simply use \"pass()\" (to declare the test ok) or fail (for not ok). They are synonyms for ok(1) and ok(0). Use these very, very, very sparingly. Module tests Sometimes you want to test if a module, or a list of modules, can successfully load. For example, you'll often want a first test which simply loads all the modules in the distribution to make sure they work before going on to do more complicated testing. For such purposes we have \"use_ok\" and \"require_ok\". require_ok require_ok($module); require_ok($file); Tries to \"require\" the given $module or $file. If it loads successfully, the test will pass. Otherwise it fails and displays the load error. \"require_ok\" will guess whether the input is a module name or a filename. No exception will be thrown if the load fails. # require Some::Module require_ok \"Some::Module\"; # require \"Some/File.pl\"; require_ok \"Some/File.pl\"; # stop testing if any of your modules will not load for my $module (@module) { require_ok $module or BAIL_OUT \"Can't load $module\"; } use_ok BEGIN { use_ok($module); } BEGIN { use_ok($module, @imports); } Like \"require_ok\", but it will \"use\" the $module in question and only loads modules, not files. If you just want to test a module can be loaded, use \"require_ok\". If you just want to load a module in a test, we recommend simply using \"use\" directly. It will cause the test to stop. It's recommended that you run \"use_ok()\" inside a BEGIN block so its functions are exported at compile-time and prototypes are properly honored. If @imports are given, they are passed through to the use. So this: BEGIN { use_ok('Some::Module', qw(foo bar)) } is like doing this: use Some::Module qw(foo bar); Version numbers can be checked like so: # Just like \"use Some::Module 1.02\" BEGIN { use_ok('Some::Module', 1.02) } Don't try to do this: BEGIN { use_ok('Some::Module'); ...some code that depends on the use... ...happening at compile time... } because the notion of \"compile-time\" is relative. Instead, you want: BEGIN { use_ok('Some::Module') } BEGIN { ...some code that depends on the use... } If you want the equivalent of \"use Foo ()\", use a module but not import anything, use \"require_ok\". BEGIN { require_ok \"Foo\" } Complex data structures Not everything is a simple eq check or regex. There are times you need to see if two data structures are equivalent. For these instances Test::More provides a handful of useful functions. NOTE I'm not quite sure what will happen with filehandles. is_deeply is_deeply( $got, $expected, $test_name ); Similar to \"is()\", except that if $got and $expected are references, it does a deep comparison walking each data structure to see if they are equivalent. If the two structures are different, it will display the place where they start differing. \"is_deeply()\" compares the dereferenced values of references, the references themselves (except for their type) are ignored. This means aspects such as blessing and ties are not considered \"different\". \"is_deeply()\" currently has very limited handling of function reference and globs. It merely checks if they have the same referent. This may improve in the future. Test::Differences and Test::Deep provide more in-depth functionality along these lines. Diagnostics If you pick the right test function, you'll usually get a good idea of what went wrong when it failed. But sometimes it doesn't work out that way. So here we have ways for you to write your own diagnostic messages which are safer than just \"print STDERR\". diag diag(@diagnostic_message); Prints a diagnostic message which is guaranteed not to interfere with test output. Like \"print\" @diagnostic_message is simply concatenated together. Returns false, so as to preserve failure. Handy for this sort of thing: ok( grep(/foo/, @users), \"There's a foo user\" ) or diag(\"Since there's no foo, check that /etc/bar is set up right\"); which would produce: not ok 42 - There's a foo user # Failed test 'There's a foo user' # in foo.t at line 52. # Since there's no foo, check that /etc/bar is set up right. You might remember \"ok() or diag()\" with the mnemonic \"open() or die()\". NOTE The exact formatting of the diagnostic output is still changing, but it is guaranteed that whatever you throw at it won't interfere with the test. note note(@diagnostic_message); Like \"diag()\", except the message will not be seen when the test is run in a harness. It will only be visible in the verbose TAP stream. Handy for putting in notes which might be useful for debugging, but don't indicate a problem. note(\"Tempfile is $tempfile\"); explain my @dump = explain @diagnostic_message; Will dump the contents of any references in a human readable format. Usually you want to pass this into \"note\" or \"diag\". Handy for things like... is_deeply($have, $want) || diag explain $have; or note explain \\%args; Some::Class->method(%args); Conditional tests Sometimes running a test under certain conditions will cause the test script to die. A certain function or method isn't implemented (such as \"fork()\" on MacOS), some resource isn't available (like a net connection) or a module isn't available. In these cases it's necessary to skip tests, or declare that they are supposed to fail but will work in the future (a todo test). For more details on the mechanics of skip and todo tests see Test::Harness. The way Test::More handles this is with a named block. Basically, a block of tests which can be skipped over or made todo. It's best if I just show you... SKIP: BLOCK SKIP: { skip $why, $how_many if $condition; ...normal testing code goes here... } This declares a block of tests that might be skipped, $how_many tests there are, $why and under what $condition to skip them. An example is the easiest way to illustrate: SKIP: { eval { require HTML::Lint }; skip \"HTML::Lint not installed\", 2 if $@; my $lint = new HTML::Lint; isa_ok( $lint, \"HTML::Lint\" ); $lint->parse( $html ); is( $lint->errors, 0, \"No errors found in HTML\" ); } If the user does not have HTML::Lint installed, the whole block of code *won't be run at all*. Test::More will output special ok's which Test::Harness interprets as skipped, but passing, tests. It's important that $how_many accurately reflects the number of tests in the SKIP block so the # of tests run will match up with your plan. If your plan is \"no_plan\" $how_many is optional and will default to 1. It's perfectly safe to nest SKIP blocks. Each SKIP block must have the label \"SKIP\", or Test::More can't work its magic. You don't skip tests which are failing because there's a bug in your program, or for which you don't yet have code written. For that you use TODO. Read on. TODO: BLOCK TODO: { local $TODO = $why if $condition; ...normal testing code goes here... } Declares a block of tests you expect to fail and $why. Perhaps it's because you haven't fixed a bug or haven't finished a new feature: TODO: { local $TODO = \"URI::Geller not finished\"; my $card = \"Eight of clubs\"; is( URI::Geller->your_card, $card, 'Is THIS your card?' ); my $spoon; URI::Geller->bend_spoon; is( $spoon, 'bent', \"Spoon bending, that's original\" ); } With a todo block, the tests inside are expected to fail. Test::More will run the tests normally, but print out special flags indicating they are \"todo\". Test::Harness will interpret failures as being ok. Should anything succeed, it will report it as an unexpected success. You then know the thing you had todo is done and can remove the TODO flag. The nice part about todo tests, as opposed to simply commenting out a block of tests, is it's like having a programmatic todo list. You know how much work is left to be done, you're aware of what bugs there are, and you'll know immediately when they're fixed. Once a todo test starts succeeding, simply move it outside the block. When the block is empty, delete it. todo_skip TODO: { todo_skip $why, $how_many if $condition; ...normal testing code... } With todo tests, it's best to have the tests actually run. That way you'll know when they start passing. Sometimes this isn't possible. Often a failing test will cause the whole program to die or hang, even inside an \"eval BLOCK\" with and using \"alarm\". In these extreme cases you have no choice but to skip over the broken tests entirely. The syntax and behavior is similar to a \"SKIP: BLOCK\" except the tests will be marked as failing but todo. Test::Harness will interpret them as passing. When do I use SKIP vs. TODO? If it's something the user might not be able to do, use SKIP. This includes optional modules that aren't installed, running under an OS that doesn't have some feature (like \"fork()\" or symlinks), or maybe you need an Internet connection and one isn't available. If it's something the programmer hasn't done yet, use TODO. This is for any code you haven't written yet, or bugs you have yet to fix, but want to put tests in your testing script (always a good idea). Test control BAIL_OUT BAIL_OUT($reason); Indicates to the harness that things are going so badly all testing should terminate. This includes the running of any additional test scripts. This is typically used when testing cannot continue such as a critical module failing to compile or a necessary external utility not being available such as a database connection failing. The test will exit with 255. For even better control look at Test::Most. Discouraged comparison functions The use of the following functions is discouraged as they are not actually testing functions and produce no diagnostics to help figure out what went wrong. They were written before \"is_deeply()\" existed because I couldn't figure out how to display a useful diff of two arbitrary data structures. These functions are usually used inside an \"ok()\". ok( eq_array(\\@got, \\@expected) ); \"is_deeply()\" can do that better and with diagnostics. is_deeply( \\@got, \\@expected ); They may be deprecated in future versions. eq_array my $is_eq = eq_array(\\@got, \\@expected); Checks if two arrays are equivalent. This is a deep check, so multi-level structures are handled correctly. eq_hash my $is_eq = eq_hash(\\%got, \\%expected); Determines if the two hashes contain the same keys and values. This is a deep check. eq_set my $is_eq = eq_set(\\@got, \\@expected); Similar to \"eq_array()\", except the order of the elements is not important. This is a deep check, but the irrelevancy of order only applies to the top level. ok( eq_set(\\@got, \\@expected) ); Is better written: is_deeply( [sort @got], [sort @expected] ); NOTE By historical accident, this is not a true set comparison. While the order of elements does not matter, duplicate elements do. NOTE \"eq_set()\" does not know how to deal with references at the top level. The following is an example of a comparison which might not work: eq_set([\\1, \\2], [\\2, \\1]); Test::Deep contains much better set comparison functions. Extending and Embedding Test::More Sometimes the Test::More interface isn't quite enough. Fortunately, Test::More is built on top of Test::Builder which provides a single, unified backend for any test library to use. This means two test libraries which both use <Test::Builder> can be used together in the same program>. If you simply want to do a little tweaking of how the tests behave, you can access the underlying Test::Builder object like so: builder my $test_builder = Test::More->builder; Returns the Test::Builder object underlying Test::More for you to play with. EXIT CODES If all your tests passed, Test::Builder will exit with zero (which is normal). If anything failed it will exit with how many failed. If you run less (or more) tests than you planned, the missing (or extras) will be considered failures. If no tests were ever run Test::Builder will throw a warning and exit with 255. If the test died, even after having successfully completed all its tests, it will still be considered a failure and will exit with 255. So the exit codes are... 0 all tests successful 255 test died or all passed but wrong # of tests run any other number how many failed (including missing or extras) If you fail more than 254 tests, it will be reported as 254. NOTE This behavior may go away in future versions. COMPATIBILITY Test::More works with Perls as old as 5.8.1. Thread support is not very reliable before 5.10.1, but that's because threads are not very reliable before 5.10.1. Although Test::More has been a core module in versions of Perl since 5.6.2, Test::More has evolved since then, and not all of the features you're used to will be present in the shipped version of Test::More. If you are writing a module, don't forget to indicate in your package metadata the minimum version of Test::More that you require. For instance, if you want to use \"done_testing()\" but want your test script to run on Perl 5.10.0, you will need to explicitly require Test::More > 0.88. Key feature milestones include: subtests Subtests were released in Test::More 0.94, which came with Perl 5.12.0. Subtests did not implicitly call \"done_testing()\" until 0.96; the first Perl with that fix was Perl 5.14.0 with 0.98. \"done_testing()\" This was released in Test::More 0.88 and first shipped with Perl in 5.10.1 as part of Test::More 0.92. \"cmp_ok()\" Although \"cmp_ok()\" was introduced in 0.40, 0.86 fixed an important bug to make it safe for overloaded objects; the fixed first shipped with Perl in 5.10.1 as part of Test::More 0.92. \"new_ok()\" \"note()\" and \"explain()\" These were was released in Test::More 0.82, and first shipped with Perl in 5.10.1 as part of Test::More 0.92. There is a full version history in the Changes file, and the Test::More versions included as core can be found using Module::CoreList: $ corelist -a Test::More CAVEATS and NOTES utf8 / \"Wide character in print\" If you use utf8 or other non-ASCII characters with Test::More you might get a \"Wide character in print\" warning. Using \"binmode STDOUT, \":utf8\"\" will not fix it. Test::Builder (which powers Test::More) duplicates STDOUT and STDERR. So any changes to them, including changing their output disciplines, will not be seem by Test::More. One work around is to apply encodings to STDOUT and STDERR as early as possible and before Test::More (or any other Test module) loads. use open ':std', ':encoding(utf8)'; use Test::More; A more direct work around is to change the filehandles used by Test::Builder. my $builder = Test::More->builder; binmode $builder->output, \":encoding(utf8)\"; binmode $builder->failure_output, \":encoding(utf8)\"; binmode $builder->todo_output, \":encoding(utf8)\"; Overloaded objects String overloaded objects are compared as strings (or in \"cmp_ok()\"'s case, strings or numbers as appropriate to the comparison op). This prevents Test::More from piercing an object's interface allowing better blackbox testing. So if a function starts returning overloaded objects instead of bare strings your tests won't notice the difference. This is good. However, it does mean that functions like \"is_deeply()\" cannot be used to test the internals of string overloaded objects. In this case I would suggest Test::Deep which contains more flexible testing functions for complex data structures. Threads Test::More will only be aware of threads if \"use threads\" has been done *before* Test::More is loaded. This is ok: use threads; use Test::More; This may cause problems: use Test::More use threads; 5.8.1 and above are supported. Anything below that has too many bugs. HISTORY This is a case of convergent evolution with Joshua Pritikin's Test module. I was largely unaware of its existence when I'd first written my own \"ok()\" routines. This module exists because I can't figure out how to easily wedge test names into Test's interface (along with a few other problems). The goal here is to have a testing utility that's simple to learn, quick to use and difficult to trip yourself up with while still providing more flexibility than the existing Test.pm. As such, the names of the most common routines are kept tiny, special cases and magic side-effects are kept to a minimum. WYSIWYG. SEE ALSO ALTERNATIVES Test::Simple if all this confuses you and you just want to write some tests. You can upgrade to Test::More later (it's forward compatible). Test::Legacy tests written with Test.pm, the original testing module, do not play well with other testing libraries. Test::Legacy emulates the Test.pm interface and does play well with others. TESTING FRAMEWORKS Fennec The Fennec framework is a testers toolbox. It uses Test::Builder under the hood. It brings enhancements for forking, defining state, and mocking. Fennec enhances several modules to work better together than they would if you loaded them individually on your own. Fennec::Declare Provides enhanced (Devel::Declare) syntax for Fennec. ADDITIONAL LIBRARIES Test::Differences for more ways to test complex data structures. And it plays well with Test::More. Test::Class is like xUnit but more perlish. Test::Deep gives you more powerful complex data structure testing. Test::Inline shows the idea of embedded testing. Mock::Quick The ultimate mocking library. Easily spawn objects defined on the fly. Can also override, block, or reimplement packages as needed. Test::FixtureBuilder Quickly define fixture data for unit tests. OTHER COMPONENTS Test::Harness is the test runner and output interpreter for Perl. It's the thing that powers \"make test\" and where the \"prove\" utility comes from. BUNDLES Bundle::Test installs a whole bunch of useful test modules. Test::Most Most commonly needed test functions and features. AUTHORS Michael G Schwern <schwern@pobox.com> with much inspiration from Joshua Pritikin's Test module and lots of help from Barrie Slaymaker, Tony Bowden, blackstar.co.uk, chromatic, Fergal Daly and the perl-qa gang. MAINTAINERS Chad Granum <exodist@cpan.org> BUGS See http://rt.cpan.org to report and view bugs. SOURCE The source code repository for Test::More can be found at http://github.com/Test-More/test-more/. COPYRIGHT Copyright 2001-2008 by Michael G Schwern <schwern@pobox.com>. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See http://www.perl.com/perl/misc/Artistic.html ",
               "distribution" : "Test-Simple",
               "pod_lines" : [
                  [
                     39,
                     124
                  ],
                  [
                     196,
                     20
                  ],
                  [
                     222,
                     66
                  ],
                  [
                     296,
                     75
                  ],
                  [
                     387,
                     29
                  ],
                  [
                     423,
                     8
                  ],
                  [
                     438,
                     39
                  ],
                  [
                     484,
                     28
                  ],
                  [
                     545,
                     33
                  ],
                  [
                     659,
                     20
                  ],
                  [
                     703,
                     62
                  ],
                  [
                     773,
                     16
                  ],
                  [
                     802,
                     40
                  ],
                  [
                     886,
                     50
                  ],
                  [
                     1003,
                     34
                  ],
                  [
                     1143,
                     54
                  ],
                  [
                     1206,
                     17
                  ],
                  [
                     1228,
                     61
                  ],
                  [
                     1316,
                     57
                  ],
                  [
                     1393,
                     35
                  ],
                  [
                     1436,
                     31
                  ],
                  [
                     1606,
                     8
                  ],
                  [
                     1648,
                     25
                  ],
                  [
                     1697,
                     249
                  ]
               ],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "documentation" : "Test::More",
               "name" : "More.pm",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "abstract" : "yet another framework for writing test scripts",
               "id" : "z7TNi_FXf5R4e_lHp3Aqt6MzrKk"
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212
         },
         {
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416218,
                  "uid" : 1009,
                  "size" : 62918
               },
               "description" : "Test::Simple and Test::More have proven to be popular testing modules, but they're not always flexible enough. Test::Builder provides a building block upon which to write your own test libraries *which can work together*. Construction new my $Test = Test::Builder->new; Returns a Test::Builder object representing the current state of the test. Since you only run one test per program \"new\" always returns the same Test::Builder object. No matter how many times you call \"new()\", you're getting the same object. This is called a singleton. This is done so that multiple modules share such global information as the test counter and where test output is going. If you want a completely new Test::Builder object different from the singleton, use \"create\". POD ERRORS Hey! The above document had some coding errors, which are explained below: Around line 10: =over without closing =back",
               "directory" : false,
               "path" : "lib/Test/Builder.pm",
               "sloc" : 1131,
               "binary" : false,
               "mime" : "text/x-script.perl-module",
               "level" : 2,
               "authorized" : true,
               "version_numified" : 1.001007,
               "documentation" : "Test::Builder",
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [
                  [
                     70,
                     47
                  ],
                  [
                     126,
                     13
                  ],
                  [
                     163,
                     19
                  ],
                  [
                     223,
                     10
                  ],
                  [
                     288,
                     24
                  ],
                  [
                     319,
                     18
                  ],
                  [
                     382,
                     10
                  ],
                  [
                     395,
                     9
                  ],
                  [
                     419,
                     9
                  ],
                  [
                     487,
                     33
                  ],
                  [
                     566,
                     9
                  ],
                  [
                     592,
                     7
                  ],
                  [
                     611,
                     21
                  ],
                  [
                     650,
                     34
                  ],
                  [
                     726,
                     9
                  ],
                  [
                     744,
                     8
                  ],
                  [
                     765,
                     12
                  ],
                  [
                     787,
                     20
                  ],
                  [
                     966,
                     19
                  ],
                  [
                     1063,
                     15
                  ],
                  [
                     1111,
                     16
                  ],
                  [
                     1142,
                     9
                  ],
                  [
                     1238,
                     20
                  ],
                  [
                     1274,
                     4
                  ],
                  [
                     1284,
                     8
                  ],
                  [
                     1323,
                     11
                  ],
                  [
                     1361,
                     53
                  ],
                  [
                     1498,
                     17
                  ],
                  [
                     1534,
                     10
                  ],
                  [
                     1557,
                     30
                  ],
                  [
                     1597,
                     22
                  ],
                  [
                     1629,
                     23
                  ],
                  [
                     1669,
                     36
                  ],
                  [
                     1712,
                     8
                  ],
                  [
                     1756,
                     14
                  ],
                  [
                     1788,
                     11
                  ],
                  [
                     1827,
                     32
                  ],
                  [
                     1985,
                     7
                  ],
                  [
                     2003,
                     15
                  ],
                  [
                     2038,
                     20
                  ],
                  [
                     2090,
                     16
                  ],
                  [
                     2118,
                     10
                  ],
                  [
                     2135,
                     48
                  ],
                  [
                     2189,
                     23
                  ],
                  [
                     2225,
                     14
                  ],
                  [
                     2252,
                     7
                  ],
                  [
                     2267,
                     42
                  ],
                  [
                     2323,
                     8
                  ],
                  [
                     2351,
                     13
                  ],
                  [
                     2378,
                     3
                  ],
                  [
                     2382,
                     13
                  ],
                  [
                     2407,
                     9
                  ],
                  [
                     2430,
                     10
                  ],
                  [
                     2447,
                     5
                  ],
                  [
                     2590,
                     78
                  ]
               ],
               "pod" : "NAME Test::Builder - Backend for building test libraries SYNOPSIS package My::Test::Module; use base 'Test::Builder::Module'; my $CLASS = __PACKAGE__; sub ok { my($test, $name) = @_; my $tb = $CLASS->builder; $tb->ok($test, $name); } DESCRIPTION Test::Simple and Test::More have proven to be popular testing modules, but they're not always flexible enough. Test::Builder provides a building block upon which to write your own test libraries *which can work together*. Construction new my $Test = Test::Builder->new; Returns a Test::Builder object representing the current state of the test. Since you only run one test per program \"new\" always returns the same Test::Builder object. No matter how many times you call \"new()\", you're getting the same object. This is called a singleton. This is done so that multiple modules share such global information as the test counter and where test output is going. If you want a completely new Test::Builder object different from the singleton, use \"create\". create my $Test = Test::Builder->create; Ok, so there can be more than one Test::Builder object and this is how you get it. You might use this instead of \"new()\" if you're testing a Test::Builder based module, but otherwise you probably want \"new\". NOTE: the implementation is not complete. \"level\", for example, is still shared amongst all Test::Builder objects, even ones created using this method. Also, the method name may change in the future. child my $child = $builder->child($name_of_child); $child->plan( tests => 4 ); $child->ok(some_code()); ... $child->finalize; Returns a new instance of \"Test::Builder\". Any output from this child will be indented four spaces more than the parent's indentation. When done, the \"finalize\" method *must* be called explicitly. Trying to create a new child with a previous child still active (i.e., \"finalize\" not called) will \"croak\". Trying to run a test when you have an open child will also \"croak\" and cause the test suite to fail. subtest $builder->subtest($name, \\&subtests, @args); See documentation of \"subtest\" in Test::More. \"subtest\" also, and optionally, accepts arguments which will be passed to the subtests reference. finalize my $ok = $child->finalize; When your child is done running tests, you must call \"finalize\" to clean up and tell the parent your pass/fail status. Calling \"finalize\" on a child with open children will \"croak\". If the child falls out of scope before \"finalize\" is called, a failure diagnostic will be issued and the child is considered to have failed. No attempt to call methods on a child after \"finalize\" is called is guaranteed to succeed. Calling this on the root builder is a no-op. parent if ( my $parent = $builder->parent ) { ... } Returns the parent \"Test::Builder\" instance, if any. Only used with child builders for nested TAP. name diag $builder->name; Returns the name of the current builder. Top level builders default to $0 (the name of the executable). Child builders are named via the \"child\" method. If no name is supplied, will be named \"Child of $parent->name\". reset $Test->reset; Reinitializes the Test::Builder singleton to its original state. Mostly useful for tests run in persistent environments where the same test might be run multiple times in the same process. Setting up tests These methods are for setting up tests and declaring how many there are. You usually only want to call one of these methods. plan $Test->plan('no_plan'); $Test->plan( skip_all => $reason ); $Test->plan( tests => $num_tests ); A convenient way to set up your tests. Call this and Test::Builder will print the appropriate headers and take the appropriate actions. If you call \"plan()\", don't call any of the other methods below. If a child calls \"skip_all\" in the plan, a \"Test::Builder::Exception\" is thrown. Trap this error, call \"finalize()\" and don't run any more tests on the child. my $child = $Test->child('some child'); eval { $child->plan( $condition ? ( skip_all => $reason ) : ( tests => 3 ) ) }; if ( eval { $@->isa('Test::Builder::Exception') } ) { $child->finalize; return; } # run your tests expected_tests my $max = $Test->expected_tests; $Test->expected_tests($max); Gets/sets the number of tests we expect this test to run and prints out the appropriate headers. no_plan $Test->no_plan; Declares that this test will run an indeterminate number of tests. done_testing $Test->done_testing(); $Test->done_testing($num_tests); Declares that you are done testing, no more tests will be run after this point. If a plan has not yet been output, it will do so. $num_tests is the number of tests you planned to run. If a numbered plan was already declared, and if this contradicts, a failing test will be run to reflect the planning mistake. If \"no_plan\" was declared, this will override. If \"done_testing()\" is called twice, the second call will issue a failing test. If $num_tests is omitted, the number of tests run will be used, like no_plan. \"done_testing()\" is, in effect, used when you'd want to use \"no_plan\", but safer. You'd use it like so: $Test->ok($a == $b); $Test->done_testing(); Or to plan a variable number of tests: for my $test (@tests) { $Test->ok($test); } $Test->done_testing(scalar @tests); has_plan $plan = $Test->has_plan Find out whether a plan has been defined. $plan is either \"undef\" (no plan has been set), \"no_plan\" (indeterminate # of tests) or an integer (the number of expected tests). skip_all $Test->skip_all; $Test->skip_all($reason); Skips all the tests, using the given $reason. Exits immediately with 0. exported_to my $pack = $Test->exported_to; $Test->exported_to($pack); Tells Test::Builder what package you exported your functions to. This method isn't terribly useful since modules which share the same Test::Builder object might get exported to different packages and only the last one will be honored. Running tests These actually run the tests, analogous to the functions in Test::More. They all return true if the test passed, false if the test failed. $name is always optional. ok $Test->ok($test, $name); Your basic test. Pass if $test is true, fail if $test is false. Just like Test::Simple's \"ok()\". is_eq $Test->is_eq($got, $expected, $name); Like Test::More's \"is()\". Checks if \"$got eq $expected\". This is the string version. \"undef\" only ever matches another \"undef\". is_num $Test->is_num($got, $expected, $name); Like Test::More's \"is()\". Checks if \"$got == $expected\". This is the numeric version. \"undef\" only ever matches another \"undef\". isnt_eq $Test->isnt_eq($got, $dont_expect, $name); Like Test::More's \"isnt()\". Checks if \"$got ne $dont_expect\". This is the string version. isnt_num $Test->isnt_num($got, $dont_expect, $name); Like Test::More's \"isnt()\". Checks if \"$got ne $dont_expect\". This is the numeric version. like $Test->like($thing, qr/$regex/, $name); $Test->like($thing, '/$regex/', $name); Like Test::More's \"like()\". Checks if $thing matches the given $regex. unlike $Test->unlike($thing, qr/$regex/, $name); $Test->unlike($thing, '/$regex/', $name); Like Test::More's \"unlike()\". Checks if $thing does not match the given $regex. cmp_ok $Test->cmp_ok($thing, $type, $that, $name); Works just like Test::More's \"cmp_ok()\". $Test->cmp_ok($big_num, '!=', $other_big_num); Other Testing Methods These are methods which are used in the course of writing a test but are not themselves tests. BAIL_OUT $Test->BAIL_OUT($reason); Indicates to the Test::Harness that things are going so badly all testing should terminate. This includes running any additional test scripts. It will exit with 255. skip $Test->skip; $Test->skip($why); Skips the current test, reporting $why. todo_skip $Test->todo_skip; $Test->todo_skip($why); Like \"skip()\", only it will declare the test as failing and TODO. Similar to print \"not ok $tnum # TODO $why\\n\"; Test building utility methods These methods are useful when writing your own test methods. maybe_regex $Test->maybe_regex(qr/$regex/); $Test->maybe_regex('/$regex/'); This method used to be useful back when Test::Builder worked on Perls before 5.6 which didn't have qr//. Now its pretty useless. Convenience method for building testing functions that take regular expressions as arguments. Takes a quoted regular expression produced by \"qr//\", or a string representing a regular expression. Returns a Perl value which may be used instead of the corresponding regular expression, or \"undef\" if its argument is not recognised. For example, a version of \"like()\", sans the useful diagnostic messages, could be written as: sub laconic_like { my ($self, $thing, $regex, $name) = @_; my $usable_regex = $self->maybe_regex($regex); die \"expecting regex, found '$regex'\\n\" unless $usable_regex; $self->ok($thing =~ m/$usable_regex/, $name); } is_fh my $is_fh = $Test->is_fh($thing); Determines if the given $thing can be used as a filehandle. Test style level $Test->level($how_high); How far up the call stack should $Test look when reporting where the test failed. Defaults to 1. Setting $Test::Builder::Level overrides. This is typically useful localized: sub my_ok { my $test = shift; local $Test::Builder::Level = $Test::Builder::Level + 1; $TB->ok($test); } To be polite to other functions wrapping your own you usually want to increment $Level rather than set it to a constant. use_numbers $Test->use_numbers($on_or_off); Whether or not the test should output numbers. That is, this if true: ok 1 ok 2 ok 3 or this if false ok ok ok Most useful when you can't depend on the test output order, such as when threads or forking is involved. Defaults to on. no_diag $Test->no_diag($no_diag); If set true no diagnostics will be printed. This includes calls to \"diag()\". no_ending $Test->no_ending($no_ending); Normally, Test::Builder does some extra diagnostics when the test ends. It also changes the exit code as described below. If this is true, none of that will be done. no_header $Test->no_header($no_header); If set to true, no \"1..N\" header will be printed. Output Controlling where the test output goes. It's ok for your test to change where STDOUT and STDERR point to, Test::Builder's default output settings will not be affected. diag $Test->diag(@msgs); Prints out the given @msgs. Like \"print\", arguments are simply appended together. Normally, it uses the \"failure_output()\" handle, but if this is for a TODO test, the \"todo_output()\" handle is used. Output will be indented and marked with a # so as not to interfere with test output. A newline will be put on the end if there isn't one already. We encourage using this rather than calling print directly. Returns false. Why? Because \"diag()\" is often used in conjunction with a failing test (\"ok() || diag()\") it \"passes through\" the failure. return ok(...) || diag(...); note $Test->note(@msgs); Like \"diag()\", but it prints to the \"output()\" handle so it will not normally be seen by the user except in verbose mode. explain my @dump = $Test->explain(@msgs); Will dump the contents of any references in a human readable format. Handy for things like... is_deeply($have, $want) || diag explain $have; or is_deeply($have, $want) || note explain $have; output failure_output todo_output my $filehandle = $Test->output; $Test->output($filehandle); $Test->output($filename); $Test->output(\\$scalar); These methods control where Test::Builder will print its output. They take either an open $filehandle, a $filename to open and write to or a $scalar reference to append to. It will always return a $filehandle. output is where normal \"ok/not ok\" test output goes. Defaults to STDOUT. failure_output is where diagnostic output on test failures and \"diag()\" goes. It is normally not read by Test::Harness and instead is displayed to the user. Defaults to STDERR. \"todo_output\" is used instead of \"failure_output()\" for the diagnostics of a failing TODO test. These will not be seen by the user. Defaults to STDOUT. reset_outputs $tb->reset_outputs; Resets all the output filehandles back to their defaults. carp $tb->carp(@message); Warns with @message but the message will appear to come from the point where the original test function was called (\"$tb->caller\"). croak $tb->croak(@message); Dies with @message but the message will appear to come from the point where the original test function was called (\"$tb->caller\"). Test Status and Info current_test my $curr_test = $Test->current_test; $Test->current_test($num); Gets/sets the current test number we're on. You usually shouldn't have to set this. If set forward, the details of the missing tests are filled in as 'unknown'. if set backward, the details of the intervening tests are deleted. You can erase history if you really want to. is_passing my $ok = $builder->is_passing; Indicates if the test suite is currently passing. More formally, it will be false if anything has happened which makes it impossible for the test suite to pass. True otherwise. For example, if no tests have run \"is_passing()\" will be true because even though a suite with no tests is a failure you can add a passing test to it and start passing. Don't think about it too much. summary my @tests = $Test->summary; A simple summary of the tests so far. True for pass, false for fail. This is a logical pass/fail, so todos are passes. Of course, test #1 is $tests[0], etc... details my @tests = $Test->details; Like \"summary()\", but with a lot more detail. $tests[$test_num - 1] = { 'ok' => is the test considered a pass? actual_ok => did it literally say 'ok'? name => name of the test (if any) type => type of test (if any, see below). reason => reason for the above (if any) }; 'ok' is true if Test::Harness will consider the test to be a pass. 'actual_ok' is a reflection of whether or not the test literally printed 'ok' or 'not ok'. This is for examining the result of 'todo' tests. 'name' is the name of the test. 'type' indicates if it was a special test. Normal tests have a type of ''. Type can be one of the following: skip see skip() todo see todo() todo_skip see todo_skip() unknown see below Sometimes the Test::Builder test counter is incremented without it printing any test output, for example, when \"current_test()\" is changed. In these cases, Test::Builder doesn't know the result of the test, so its type is 'unknown'. These details for these tests are filled in. They are considered ok, but the name and actual_ok is left \"undef\". For example \"not ok 23 - hole count # TODO insufficient donuts\" would result in this structure: $tests[22] = # 23 - 1, since arrays start from 0. { ok => 1, # logically, the test passed since its todo actual_ok => 0, # in absolute terms, it failed name => 'hole count', type => 'todo', reason => 'insufficient donuts' }; todo my $todo_reason = $Test->todo; my $todo_reason = $Test->todo($pack); If the current tests are considered \"TODO\" it will return the reason, if any. This reason can come from a $TODO variable or the last call to \"todo_start()\". Since a TODO test does not need a reason, this function can return an empty string even when inside a TODO block. Use \"$Test->in_todo\" to determine if you are currently inside a TODO block. \"todo()\" is about finding the right package to look for $TODO in. It's pretty good at guessing the right package to look at. It first looks for the caller based on \"$Level + 1\", since \"todo()\" is usually called inside a test function. As a last resort it will use \"exported_to()\". Sometimes there is some confusion about where \"todo()\" should be looking for the $TODO variable. If you want to be sure, tell it explicitly what $pack to use. find_TODO my $todo_reason = $Test->find_TODO(); my $todo_reason = $Test->find_TODO($pack); Like \"todo()\" but only returns the value of $TODO ignoring \"todo_start()\". Can also be used to set $TODO to a new value while returning the old value: my $old_reason = $Test->find_TODO($pack, 1, $new_reason); in_todo my $in_todo = $Test->in_todo; Returns true if the test is currently inside a TODO block. todo_start $Test->todo_start(); $Test->todo_start($message); This method allows you declare all subsequent tests as TODO tests, up until the \"todo_end\" method has been called. The \"TODO:\" and $TODO syntax is generally pretty good about figuring out whether or not we're in a TODO test. However, often we find that this is not possible to determine (such as when we want to use $TODO but the tests are being executed in other packages which can't be inferred beforehand). Note that you can use this to nest \"todo\" tests $Test->todo_start('working on this'); # lots of code $Test->todo_start('working on that'); # more code $Test->todo_end; $Test->todo_end; This is generally not recommended, but large testing systems often have weird internal needs. We've tried to make this also work with the TODO: syntax, but it's not guaranteed and its use is also discouraged: TODO: { local $TODO = 'We have work to do!'; $Test->todo_start('working on this'); # lots of code $Test->todo_start('working on that'); # more code $Test->todo_end; $Test->todo_end; } Pick one style or another of \"TODO\" to be on the safe side. \"todo_end\" $Test->todo_end; Stops running tests as \"TODO\" tests. This method is fatal if called without a preceding \"todo_start\" method call. caller my $package = $Test->caller; my($pack, $file, $line) = $Test->caller; my($pack, $file, $line) = $Test->caller($height); Like the normal \"caller()\", except it reports according to your \"level()\". $height will be added to the \"level()\". If \"caller()\" winds up off the top of the stack it report the highest context. EXIT CODES If all your tests passed, Test::Builder will exit with zero (which is normal). If anything failed it will exit with how many failed. If you run less (or more) tests than you planned, the missing (or extras) will be considered failures. If no tests were ever run Test::Builder will throw a warning and exit with 255. If the test died, even after having successfully completed all its tests, it will still be considered a failure and will exit with 255. So the exit codes are... 0 all tests successful 255 test died or all passed but wrong # of tests run any other number how many failed (including missing or extras) If you fail more than 254 tests, it will be reported as 254. THREADS In perl 5.8.1 and later, Test::Builder is thread-safe. The test number is shared amongst all threads. This means if one thread sets the test number using \"current_test()\" they will all be effected. While versions earlier than 5.8.1 had threads they contain too many bugs to support. Test::Builder is only thread-aware if threads.pm is loaded *before* Test::Builder. MEMORY An informative hash, accessible via \"details()\", is stored for each test you perform. So memory usage will scale linearly with each test run. Although this is not a problem for most test suites, it can become an issue if you do large (hundred thousands to million) combinatorics tests in the same run. In such cases, you are advised to either split the test file into smaller ones, or use a reverse approach, doing \"normal\" (code) compares and triggering \"fail()\" should anything go unexpected. Future versions of Test::Builder will have a way to turn history off. EXAMPLES CPAN can provide the best examples. Test::Simple, Test::More, Test::Exception and Test::Differences all use Test::Builder. SEE ALSO Test::Simple, Test::More, Test::Harness AUTHORS Original code by chromatic, maintained by Michael G Schwern <schwern@pobox.com> MAINTAINERS Chad Granum <exodist@cpan.org> COPYRIGHT Copyright 2002-2008 by chromatic <chromatic@wgz.org> and Michael G Schwern <schwern@pobox.com>. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See http://www.perl.com/perl/misc/Artistic.html ",
               "module" : [
                  {
                     "name" : "Test::Builder",
                     "authorized" : true,
                     "associated_pod" : "EXODIST/Test-Simple-1.001007/lib/Test/Builder.pm",
                     "indexed" : true,
                     "version_numified" : 1.001007,
                     "version" : "1.001007"
                  }
               ],
               "slop" : 646,
               "abstract" : "Backend for building test libraries",
               "id" : "Tf5GTFJhnKcJC4T6EnHrFM78nz0",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "Builder.pm"
            },
            "_id" : "Tf5GTFJhnKcJC4T6EnHrFM78nz0",
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_id" : "ldzSSaP6g5JQ0GzV7yQtbYXt_Ec",
            "_source" : {
               "mime" : "text/x-script.perl-module",
               "level" : 3,
               "authorized" : true,
               "binary" : false,
               "description" : "This is a superclass for Test::Builder-based modules. It provides a handful of common functionality and a method of getting at the underlying Test::Builder object. Importing Test::Builder::Module is a subclass of Exporter which means your module is also a subclass of Exporter. @EXPORT, @EXPORT_OK, etc... all act normally. A few methods are provided to do the \"use Your::Module tests => 23\" part for you. import Test::Builder::Module provides an \"import()\" method which acts in the same basic way as Test::More's, setting the plan and controlling exporting of functions and variables. This allows your module to set the plan independent of Test::More. All arguments passed to \"import()\" are passed onto \"Your::Module->builder->plan()\" with the exception of \"import =>[qw(things to import)]\". use Your::Module import => [qw(this that)], tests => 23; says to import the functions \"this()\" and \"that()\" as well as set the plan to be 23 tests. \"import()\" also sets the \"exported_to()\" attribute of your builder to be the caller of the \"import()\" function. Additional behaviors can be added to your \"import()\" method by overriding \"import_extra()\".",
               "path" : "lib/Test/Builder/Module.pm",
               "directory" : false,
               "sloc" : 43,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416218,
                  "size" : 3894,
                  "uid" : 1009
               },
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "Module.pm",
               "abstract" : "Base class for test modules",
               "id" : "ldzSSaP6g5JQ0GzV7yQtbYXt_Ec",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "pod" : "NAME Test::Builder::Module - Base class for test modules SYNOPSIS # Emulates Test::Simple package Your::Module; my $CLASS = __PACKAGE__; use base 'Test::Builder::Module'; @EXPORT = qw(ok); sub ok ($;$) { my $tb = $CLASS->builder; return $tb->ok(@_); } 1; DESCRIPTION This is a superclass for Test::Builder-based modules. It provides a handful of common functionality and a method of getting at the underlying Test::Builder object. Importing Test::Builder::Module is a subclass of Exporter which means your module is also a subclass of Exporter. @EXPORT, @EXPORT_OK, etc... all act normally. A few methods are provided to do the \"use Your::Module tests => 23\" part for you. import Test::Builder::Module provides an \"import()\" method which acts in the same basic way as Test::More's, setting the plan and controlling exporting of functions and variables. This allows your module to set the plan independent of Test::More. All arguments passed to \"import()\" are passed onto \"Your::Module->builder->plan()\" with the exception of \"import =>[qw(things to import)]\". use Your::Module import => [qw(this that)], tests => 23; says to import the functions \"this()\" and \"that()\" as well as set the plan to be 23 tests. \"import()\" also sets the \"exported_to()\" attribute of your builder to be the caller of the \"import()\" function. Additional behaviors can be added to your \"import()\" method by overriding \"import_extra()\". import_extra Your::Module->import_extra(\\@import_args); \"import_extra()\" is called by \"import()\". It provides an opportunity for you to add behaviors to your module based on its import list. Any extra arguments which shouldn't be passed on to \"plan()\" should be stripped off by this method. See Test::More for an example of its use. NOTE This mechanism is *VERY ALPHA AND LIKELY TO CHANGE* as it feels like a bit of an ugly hack in its current form. Builder Test::Builder::Module provides some methods of getting at the underlying Test::Builder object. builder my $builder = Your::Class->builder; This method returns the Test::Builder object associated with Your::Class. It is not a constructor so you can call it as often as you like. This is the preferred way to get the Test::Builder object. You should *not* get it via \"Test::Builder->new\" as was previously recommended. The object returned by \"builder()\" may change at runtime so you should call \"builder()\" inside each function rather than store it in a global. sub ok { my $builder = Your::Class->builder; return $builder->ok(@_); } ",
               "module" : [
                  {
                     "authorized" : true,
                     "name" : "Test::Builder::Module",
                     "version" : "1.001007",
                     "version_numified" : 1.001007,
                     "indexed" : true,
                     "associated_pod" : "EXODIST/Test-Simple-1.001007/lib/Test/Builder/Module.pm"
                  }
               ],
               "slop" : 66,
               "documentation" : "Test::Builder::Module",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "pod_lines" : [
                  [
                     13,
                     61
                  ],
                  [
                     121,
                     16
                  ],
                  [
                     140,
                     27
                  ]
               ],
               "distribution" : "Test-Simple"
            }
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212,
            "_source" : {
               "pod" : "NAME Test::Builder::Tester - test testsuites that have been built with Test::Builder SYNOPSIS use Test::Builder::Tester tests => 1; use Test::More; test_out(\"not ok 1 - foo\"); test_fail(+1); fail(\"foo\"); test_test(\"fail works\"); DESCRIPTION A module that helps you test testing modules that are built with Test::Builder. The testing system is designed to be used by performing a three step process for each test you wish to test. This process starts with using \"test_out\" and \"test_err\" in advance to declare what the testsuite you are testing will output with Test::Builder to stdout and stderr. You then can run the test(s) from your test suite that call Test::Builder. At this point the output of Test::Builder is safely captured by Test::Builder::Tester rather than being interpreted as real test output. The final stage is to call \"test_test\" that will simply compare what you predeclared to what Test::Builder actually outputted, and report the results back with a \"ok\" or \"not ok\" (with debugging) to the normal output. Functions These are the six methods that are exported as default. test_out test_err Procedures for predeclaring the output that your test suite is expected to produce until \"test_test\" is called. These procedures automatically assume that each line terminates with \"\\n\". So test_out(\"ok 1\",\"ok 2\"); is the same as test_out(\"ok 1\\nok 2\"); which is even the same as test_out(\"ok 1\"); test_out(\"ok 2\"); Once \"test_out\" or \"test_err\" (or \"test_fail\" or \"test_diag\") have been called, all further output from Test::Builder will be captured by Test::Builder::Tester. This means that you will not be able perform further tests to the normal output in the normal way until you call \"test_test\" (well, unless you manually meddle with the output filehandles) test_fail Because the standard failure message that Test::Builder produces whenever a test fails will be a common occurrence in your test error output, and because it has changed between Test::Builder versions, rather than forcing you to call \"test_err\" with the string all the time like so test_err(\"# Failed test ($0 at line \".line_num(+1).\")\"); \"test_fail\" exists as a convenience function that can be called instead. It takes one argument, the offset from the current line that the line that causes the fail is on. test_fail(+1); This means that the example in the synopsis could be rewritten more simply as: test_out(\"not ok 1 - foo\"); test_fail(+1); fail(\"foo\"); test_test(\"fail works\"); test_diag As most of the remaining expected output to the error stream will be created by Test::Builder's \"diag\" function, Test::Builder::Tester provides a convenience function \"test_diag\" that you can use instead of \"test_err\". The \"test_diag\" function prepends comment hashes and spacing to the start and newlines to the end of the expected output passed to it and adds it to the list of expected error output. So, instead of writing test_err(\"# Couldn't open file\"); you can write test_diag(\"Couldn't open file\"); Remember that Test::Builder's diag function will not add newlines to the end of output and test_diag will. So to check Test::Builder->new->diag(\"foo\\n\",\"bar\\n\"); You would do test_diag(\"foo\",\"bar\") without the newlines. test_test Actually performs the output check testing the tests, comparing the data (with \"eq\") that we have captured from Test::Builder against what was declared with \"test_out\" and \"test_err\". This takes name/value pairs that effect how the test is run. title (synonym 'name', 'label') The name of the test that will be displayed after the \"ok\" or \"not ok\". skip_out Setting this to a true value will cause the test to ignore if the output sent by the test to the output stream does not match that declared with \"test_out\". skip_err Setting this to a true value will cause the test to ignore if the output sent by the test to the error stream does not match that declared with \"test_err\". As a convenience, if only one argument is passed then this argument is assumed to be the name of the test (as in the above examples.) Once \"test_test\" has been run test output will be redirected back to the original filehandles that Test::Builder was connected to (probably STDOUT and STDERR,) meaning any further tests you run will function normally and cause success/errors for Test::Harness. line_num A utility function that returns the line number that the function was called on. You can pass it an offset which will be added to the result. This is very useful for working out the correct text of diagnostic functions that contain line numbers. Essentially this is the same as the \"__LINE__\" macro, but the \"line_num(+3)\" idiom is arguably nicer. In addition to the six exported functions there exists one function that can only be accessed with a fully qualified function call. color When \"test_test\" is called and the output that your tests generate does not match that which you declared, \"test_test\" will print out debug information showing the two conflicting versions. As this output itself is debug information it can be confusing which part of the output is from \"test_test\" and which was the original output from your original tests. Also, it may be hard to spot things like extraneous whitespace at the end of lines that may cause your test to fail even though the output looks similar. To assist you \"test_test\" can colour the background of the debug information to disambiguate the different types of output. The debug output will have its background coloured green and red. The green part represents the text which is the same between the executed and actual output, the red shows which part differs. The \"color\" function determines if colouring should occur or not. Passing it a true or false value will enable or disable colouring respectively, and the function called with no argument will return the current setting. To enable colouring from the command line, you can use the Text::Builder::Tester::Color module like so: perl -Mlib=Text::Builder::Tester::Color test.t Or by including the Test::Builder::Tester::Color module directly in the PERL5LIB. BUGS Calls \"Test::Builder->no_ending\" turning off the ending tests. This is needed as otherwise it will trip out because we've run more tests than we strictly should have and it'll register any failures we had that we were testing for as real failures. The color function doesn't work unless Term::ANSIColor is compatible with your terminal. Bugs (and requests for new features) can be reported to the author though the CPAN RT system: <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Test-Builder-Tester> AUTHOR Copyright Mark Fowler <mark@twoshortplanks.com> 2002, 2004. Some code taken from Test::More and Test::Catch, written by Michael G Schwern <schwern@pobox.com>. Hence, those parts Copyright Micheal G Schwern 2001. Used and distributed with permission. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself. MAINTAINERS Chad Granum <exodist@cpan.org> NOTES Thanks to Richard Clamp <richardc@unixbeard.net> for letting me use his testing system to try this module out on. SEE ALSO Test::Builder, Test::Builder::Tester::Color, Test::More. ",
               "module" : [
                  {
                     "associated_pod" : "EXODIST/Test-Simple-1.001007/lib/Test/Builder/Tester.pm",
                     "indexed" : true,
                     "version" : "1.24",
                     "version_numified" : 1.24,
                     "name" : "Test::Builder::Tester",
                     "authorized" : true
                  },
                  {
                     "authorized" : true,
                     "name" : "Test::Builder::Tester::Tie",
                     "version_numified" : 0,
                     "indexed" : true
                  }
               ],
               "slop" : 174,
               "version_numified" : 1.001007,
               "documentation" : "Test::Builder::Tester",
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [
                  [
                     9,
                     36
                  ],
                  [
                     141,
                     33
                  ],
                  [
                     189,
                     25
                  ],
                  [
                     227,
                     29
                  ],
                  [
                     266,
                     38
                  ],
                  [
                     354,
                     11
                  ],
                  [
                     371,
                     39
                  ],
                  [
                     418,
                     46
                  ]
               ],
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "Tester.pm",
               "abstract" : "test testsuites that have been built with Test::Builder",
               "id" : "A3rKh2TQkicp6anDQ0k9lHljvPY",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "path" : "lib/Test/Builder/Tester.pm",
               "directory" : false,
               "description" : "A module that helps you test testing modules that are built with Test::Builder. The testing system is designed to be used by performing a three step process for each test you wish to test. This process starts with using \"test_out\" and \"test_err\" in advance to declare what the testsuite you are testing will output with Test::Builder to stdout and stderr. You then can run the test(s) from your test suite that call Test::Builder. At this point the output of Test::Builder is safely captured by Test::Builder::Tester rather than being interpreted as real test output. The final stage is to call \"test_test\" that will simply compare what you predeclared to what Test::Builder actually outputted, and report the results back with a \"ok\" or \"not ok\" (with debugging) to the normal output.",
               "sloc" : 207,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416218,
                  "uid" : 1009,
                  "size" : 15954,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "level" : 3,
               "mime" : "text/x-script.perl-module",
               "authorized" : true,
               "binary" : false
            },
            "_id" : "A3rKh2TQkicp6anDQ0k9lHljvPY"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212,
            "_id" : "J0aKt_g3ypgVfYSspLjIEWtTrHM",
            "_source" : {
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "J0aKt_g3ypgVfYSspLjIEWtTrHM",
               "name" : "circular_data.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 1200,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "sloc" : 48,
               "directory" : false,
               "path" : "t/circular_data.t"
            }
         },
         {
            "_source" : {
               "sloc" : 27,
               "directory" : false,
               "path" : "t/no_tests.t",
               "maturity" : "released",
               "stat" : {
                  "uid" : 1009,
                  "size" : 782,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "binary" : false,
               "pod" : "",
               "slop" : 0,
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "name" : "no_tests.t",
               "author" : "EXODIST",
               "id" : "ogsXh1F5pAdXoytMOi_7pNDCQgY",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54"
            },
            "_id" : "ogsXh1F5pAdXoytMOi_7pNDCQgY",
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212
         },
         {
            "_source" : {
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 482,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "sloc" : 16,
               "path" : "t/versions.t",
               "directory" : false,
               "binary" : false,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "DiC2hABuhk4ZA6SgoLeCWgb5tBw",
               "name" : "versions.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "DiC2hABuhk4ZA6SgoLeCWgb5tBw",
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212
         },
         {
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "Y6h60MPIRCODkTPI9UR_iHBBhgE",
            "_source" : {
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "Y6h60MPIRCODkTPI9UR_iHBBhgE",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "plan_skip_all.t",
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 190,
                  "uid" : 1009
               },
               "path" : "t/plan_skip_all.t",
               "directory" : false,
               "sloc" : 9,
               "binary" : false,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true
            }
         },
         {
            "_id" : "cfarWCK0hFBCgctJKUTNIP83Sgg",
            "_source" : {
               "path" : "t/extra.t",
               "directory" : false,
               "sloc" : 40,
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 958,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "author" : "EXODIST",
               "name" : "extra.t",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "cfarWCK0hFBCgctJKUTNIP83Sgg"
            },
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_id" : "r2quhG3yO1eRXFOlrqN8YcwCg_o",
            "_source" : {
               "id" : "r2quhG3yO1eRXFOlrqN8YcwCg_o",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "plan.t",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 1377
               },
               "directory" : false,
               "path" : "t/subtest/plan.t",
               "sloc" : 40
            }
         },
         {
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "id" : "Ib9E83WgFa_N9OvaHAv6ks1hP8U",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "predicate.t",
               "author" : "EXODIST",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "maturity" : "released",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 4868,
                  "uid" : 1009
               },
               "sloc" : 126,
               "directory" : false,
               "path" : "t/subtest/predicate.t"
            },
            "_id" : "Ib9E83WgFa_N9OvaHAv6ks1hP8U"
         },
         {
            "_source" : {
               "stat" : {
                  "uid" : 1009,
                  "size" : 112,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "sloc" : 0,
               "directory" : false,
               "path" : "t/subtest/for_do_t.test",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/plain",
               "level" : 2,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "ynmp0A7ukXmc7CBr78g036_DMcg",
               "name" : "for_do_t.test",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "ynmp0A7ukXmc7CBr78g036_DMcg",
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "AQqDXMZ_iO5lmbdJTmpTZN98UOw",
            "_source" : {
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "name" : "Tester",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "AQqDXMZ_iO5lmbdJTmpTZN98UOw",
               "sloc" : 0,
               "directory" : true,
               "path" : "t/Tester",
               "stat" : {
                  "mode" : 16877,
                  "gid" : 1009,
                  "mtime" : 1413943292,
                  "size" : 4096,
                  "uid" : 1009
               },
               "maturity" : "released",
               "authorized" : true,
               "level" : 1,
               "mime" : "text/plain",
               "binary" : true
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212
         },
         {
            "_id" : "gsfgrqpgH22391IL_J2UPI0oq4c",
            "_source" : {
               "path" : "t/Tester/tbt_05faildiag.t",
               "directory" : false,
               "sloc" : 27,
               "stat" : {
                  "uid" : 1009,
                  "size" : 824,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "author" : "EXODIST",
               "name" : "tbt_05faildiag.t",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "gsfgrqpgH22391IL_J2UPI0oq4c"
            },
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212,
            "_source" : {
               "binary" : false,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 248,
                  "mtime" : 1413416121
               },
               "maturity" : "released",
               "path" : "t/Tester/tbt_08subtest.t",
               "directory" : false,
               "sloc" : 11,
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "_GP_8C0hec4oA7gtwYc5ldGW0hc",
               "author" : "EXODIST",
               "name" : "tbt_08subtest.t",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : ""
            },
            "_id" : "_GP_8C0hec4oA7gtwYc5ldGW0hc"
         },
         {
            "_id" : "2fkMUwmFMq4wMgehuaaHDRhT1iE",
            "_source" : {
               "id" : "2fkMUwmFMq4wMgehuaaHDRhT1iE",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "tbt_09do_script.pl",
               "author" : "EXODIST",
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 215,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 8,
               "path" : "t/Tester/tbt_09do_script.pl",
               "directory" : false
            },
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_source" : {
               "stat" : {
                  "size" : 5277,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released",
               "directory" : false,
               "path" : "t/Tester/tbt_07args.t",
               "sloc" : 98,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "JqX8kWbGM2ovGwgwmqRUBd_g1_8",
               "author" : "EXODIST",
               "name" : "tbt_07args.t",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "JqX8kWbGM2ovGwgwmqRUBd_g1_8",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212
         },
         {
            "_id" : "lEjxVPpJmskyGQbcg3EqbqlYeDo",
            "_source" : {
               "binary" : false,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 196,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "directory" : false,
               "path" : "t/Tester/tbt_04line_num.t",
               "sloc" : 5,
               "id" : "lEjxVPpJmskyGQbcg3EqbqlYeDo",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "tbt_04line_num.t",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212
         },
         {
            "_source" : {
               "name" : "maybe_regex.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "WTj62fYfesm4LYjRgRIaYl_WGtI",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "authorized" : true,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "binary" : false,
               "sloc" : 47,
               "path" : "t/Builder/maybe_regex.t",
               "directory" : false,
               "stat" : {
                  "uid" : 1009,
                  "size" : 1314,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "maturity" : "released"
            },
            "_id" : "WTj62fYfesm4LYjRgRIaYl_WGtI",
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212,
            "_source" : {
               "id" : "4mLZZ54BxLxMS0nxLKDIzUZUv1g",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "Builder.t",
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "pod" : "",
               "slop" : 0,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true,
               "maturity" : "released",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "size" : 635,
                  "uid" : 1009,
                  "mtime" : 1413416121
               },
               "path" : "t/Builder/Builder.t",
               "directory" : false,
               "sloc" : 20
            },
            "_id" : "4mLZZ54BxLxMS0nxLKDIzUZUv1g"
         },
         {
            "_id" : "2sU1WcNs4UMJHv_n3U99Pfuk_i4",
            "_source" : {
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "2sU1WcNs4UMJHv_n3U99Pfuk_i4",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "is_passing.t",
               "maturity" : "released",
               "stat" : {
                  "size" : 2254,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "directory" : false,
               "path" : "t/Builder/is_passing.t",
               "sloc" : 71,
               "binary" : false,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "authorized" : true
            },
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212,
            "_id" : "OR4ltKm4qPYW78mJpLlnUmbnohY",
            "_source" : {
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 3050,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "directory" : false,
               "path" : "t/Builder/details.t",
               "sloc" : 81,
               "binary" : false,
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "OR4ltKm4qPYW78mJpLlnUmbnohY",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "details.t"
            }
         },
         {
            "_id" : "Iv993XuRnyz6fjzwXeU5wqdvJZ8",
            "_source" : {
               "release" : "Test-Simple-1.001007",
               "author" : "EXODIST",
               "name" : "no_ending.t",
               "id" : "Iv993XuRnyz6fjzwXeU5wqdvJZ8",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "pod" : "",
               "slop" : 0,
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "level" : 2,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "binary" : false,
               "path" : "t/Builder/no_ending.t",
               "directory" : false,
               "sloc" : 15,
               "maturity" : "released",
               "stat" : {
                  "uid" : 1009,
                  "size" : 345,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               }
            },
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212
         },
         {
            "_id" : "SYHtHl1cJw8WNqDOC84k5OVCT7I",
            "_source" : {
               "pod" : "",
               "slop" : 0,
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "release" : "Test-Simple-1.001007",
               "name" : "current_test_without_plan.t",
               "author" : "EXODIST",
               "id" : "SYHtHl1cJw8WNqDOC84k5OVCT7I",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "sloc" : 9,
               "path" : "t/Builder/current_test_without_plan.t",
               "directory" : false,
               "maturity" : "released",
               "stat" : {
                  "size" : 233,
                  "uid" : 1009,
                  "mtime" : 1413416121,
                  "gid" : 1009,
                  "mode" : 33188
               },
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 2,
               "binary" : false
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212
         },
         {
            "_source" : {
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 439,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released",
               "path" : "TODO",
               "directory" : false,
               "sloc" : 10,
               "binary" : false,
               "level" : 0,
               "mime" : "",
               "authorized" : true,
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : "",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "id" : "_j_bmB3iSoAkC2_SQBgNMpkhLgk",
               "author" : "EXODIST",
               "name" : "TODO",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "_j_bmB3iSoAkC2_SQBgNMpkhLgk",
            "_type" : "file",
            "_index" : "cpan_v1",
            "_score" : 11.791212
         },
         {
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "binary" : false,
               "authorized" : true,
               "level" : 0,
               "mime" : "application/json",
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416247,
                  "uid" : 1009,
                  "size" : 1372
               },
               "maturity" : "released",
               "sloc" : 0,
               "directory" : false,
               "path" : "META.json",
               "date" : "2014-10-15T23:38:54",
               "indexed" : true,
               "id" : "P9p6F1cZE_eYJCyEi9VgmmmpgU4",
               "name" : "META.json",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : ""
            },
            "_id" : "P9p6F1cZE_eYJCyEi9VgmmmpgU4"
         },
         {
            "_score" : 11.791212,
            "_type" : "file",
            "_index" : "cpan_v1",
            "_source" : {
               "status" : "cpan",
               "version" : "1.001007",
               "version_numified" : 1.001007,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "pod" : "",
               "slop" : 0,
               "id" : "tMxW1IzLs7tTCTc9MlWMRa_9pEg",
               "indexed" : true,
               "date" : "2014-10-15T23:38:54",
               "release" : "Test-Simple-1.001007",
               "name" : "README",
               "author" : "EXODIST",
               "maturity" : "released",
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 594,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "sloc" : 15,
               "directory" : false,
               "path" : "README",
               "binary" : false,
               "authorized" : true,
               "mime" : "",
               "level" : 0
            },
            "_id" : "tMxW1IzLs7tTCTc9MlWMRa_9pEg"
         },
         {
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file",
            "_source" : {
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "size" : 1819,
                  "uid" : 1009
               },
               "maturity" : "released",
               "sloc" : 63,
               "directory" : false,
               "path" : "t/undef.t",
               "binary" : false,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "slop" : 0,
               "pod" : "",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "UrG6F4ecmtYWjATz3kOrfKyjkW4",
               "name" : "undef.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007"
            },
            "_id" : "UrG6F4ecmtYWjATz3kOrfKyjkW4"
         },
         {
            "_id" : "HqQvJ4hxSy2Iu0ZF30o0ZgrVjVA",
            "_source" : {
               "name" : "tbm_doesnt_set_exported_to.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "HqQvJ4hxSy2Iu0ZF30o0ZgrVjVA",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "authorized" : true,
               "mime" : "text/x-script.perl",
               "level" : 1,
               "binary" : false,
               "sloc" : 17,
               "directory" : false,
               "path" : "t/tbm_doesnt_set_exported_to.t",
               "stat" : {
                  "gid" : 1009,
                  "mode" : 33188,
                  "uid" : 1009,
                  "size" : 457,
                  "mtime" : 1413416121
               },
               "maturity" : "released"
            },
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "DxGkhREBfkmEW41OExkWVlBIAsU",
            "_source" : {
               "mime" : "text/x-script.perl",
               "level" : 1,
               "authorized" : true,
               "binary" : false,
               "directory" : false,
               "path" : "t/plan.t",
               "sloc" : 16,
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 474
               },
               "maturity" : "released",
               "author" : "EXODIST",
               "name" : "plan.t",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "DxGkhREBfkmEW41OExkWVlBIAsU",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version_numified" : 1.001007,
               "version" : "1.001007",
               "status" : "cpan"
            },
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "doKwMoDfS0JtcN2r9FSO9d8XPEw",
            "_source" : {
               "name" : "More.t",
               "author" : "EXODIST",
               "release" : "Test-Simple-1.001007",
               "indexed" : false,
               "date" : "2014-10-15T23:38:54",
               "id" : "doKwMoDfS0JtcN2r9FSO9d8XPEw",
               "slop" : 0,
               "pod" : "",
               "distribution" : "Test-Simple",
               "pod_lines" : [],
               "version" : "1.001007",
               "status" : "cpan",
               "version_numified" : 1.001007,
               "authorized" : true,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "binary" : false,
               "sloc" : 136,
               "path" : "t/More.t",
               "directory" : false,
               "stat" : {
                  "mtime" : 1413416121,
                  "size" : 5218,
                  "uid" : 1009,
                  "mode" : 33188,
                  "gid" : 1009
               },
               "maturity" : "released"
            },
            "_score" : 11.791212,
            "_index" : "cpan_v1",
            "_type" : "file"
         },
         {
            "_id" : "FGf20Gr8kMou_ITYT8miODRBVuY",
            "_source" : {
               "binary" : false,
               "level" : 1,
               "mime" : "text/x-script.perl",
               "authorized" : true,
               "stat" : {
                  "mode" : 33188,
                  "gid" : 1009,
                  "mtime" : 1413416121,
                  "uid" : 1009,
                  "size" : 1072
               },
               "maturity" : "released",
               "path" : "t/plan_bad.t",
               "directory" : false,
               "sloc" : 24,
               "date" : "2014-10-15T23:38:54",
               "indexed" : false,
               "id" : "FGf20Gr8kMou_ITYT8miODRBVuY",
               "author" : "EXODIST",
               "name" : "plan_bad.t",
               "release" : "Test-Simple-1.001007",
               "pod_lines" : [],
               "distribution" : "Test-Simple",
               "version_numified" : 1.001007,
               "status" : "cpan",
               "version" : "1.001007",
               "slop" : 0,
               "pod" : ""
            },
            "_index" : "cpan_v1",
            "_type" : "file",
            "_score" : 11.791212
         }
      ],
      "max_score" : 12.24021
   },
   "took" : 3
}
